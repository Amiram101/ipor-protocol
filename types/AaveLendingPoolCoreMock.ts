/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface AaveLendingPoolCoreMockInterface extends utils.Interface {
  contractName: "AaveLendingPoolCoreMock";
  functions: {
    "_setReserve(address)": FunctionFragment;
    "apr()": FunctionFragment;
    "borrowsStable()": FunctionFragment;
    "borrowsVariable()": FunctionFragment;
    "getReserveAvailableLiquidity(address)": FunctionFragment;
    "getReserveCurrentAverageStableBorrowRate(address)": FunctionFragment;
    "getReserveCurrentLiquidityRate(address)": FunctionFragment;
    "getReserveInterestRateStrategyAddress(address)": FunctionFragment;
    "getReserveTotalBorrowsStable(address)": FunctionFragment;
    "getReserveTotalBorrowsVariable(address)": FunctionFragment;
    "liquidity()": FunctionFragment;
    "reserve()": FunctionFragment;
    "setReserveAvailableLiquidity(uint256)": FunctionFragment;
    "setReserveCurrentAverageStableBorrowRate(uint256)": FunctionFragment;
    "setReserveCurrentLiquidityRate(uint256)": FunctionFragment;
    "setReserveTotalBorrowsStable(uint256)": FunctionFragment;
    "setReserveTotalBorrowsVariable(uint256)": FunctionFragment;
    "stableBorrowRate()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "_setReserve", values: [string]): string;
  encodeFunctionData(functionFragment: "apr", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "borrowsStable",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "borrowsVariable",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveAvailableLiquidity",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveCurrentAverageStableBorrowRate",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveCurrentLiquidityRate",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveInterestRateStrategyAddress",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveTotalBorrowsStable",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getReserveTotalBorrowsVariable",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "liquidity", values?: undefined): string;
  encodeFunctionData(functionFragment: "reserve", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "setReserveAvailableLiquidity",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setReserveCurrentAverageStableBorrowRate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setReserveCurrentLiquidityRate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setReserveTotalBorrowsStable",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setReserveTotalBorrowsVariable",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "stableBorrowRate",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "_setReserve",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "apr", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "borrowsStable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "borrowsVariable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveAvailableLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveCurrentAverageStableBorrowRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveCurrentLiquidityRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveInterestRateStrategyAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveTotalBorrowsStable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReserveTotalBorrowsVariable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "liquidity", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "reserve", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setReserveAvailableLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReserveCurrentAverageStableBorrowRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReserveCurrentLiquidityRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReserveTotalBorrowsStable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setReserveTotalBorrowsVariable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stableBorrowRate",
    data: BytesLike
  ): Result;

  events: {};
}

export interface AaveLendingPoolCoreMock extends BaseContract {
  contractName: "AaveLendingPoolCoreMock";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: AaveLendingPoolCoreMockInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    _setReserve(
      _reserve: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "_setReserve(address)"(
      _reserve: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    apr(overrides?: CallOverrides): Promise<[BigNumber]>;

    "apr()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    borrowsStable(overrides?: CallOverrides): Promise<[BigNumber]>;

    "borrowsStable()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    borrowsVariable(overrides?: CallOverrides): Promise<[BigNumber]>;

    "borrowsVariable()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    getReserveAvailableLiquidity(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getReserveAvailableLiquidity(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getReserveCurrentAverageStableBorrowRate(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getReserveCurrentAverageStableBorrowRate(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getReserveCurrentLiquidityRate(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { liquidityRate: BigNumber }>;

    "getReserveCurrentLiquidityRate(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { liquidityRate: BigNumber }>;

    getReserveInterestRateStrategyAddress(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getReserveInterestRateStrategyAddress(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getReserveTotalBorrowsStable(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getReserveTotalBorrowsStable(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getReserveTotalBorrowsVariable(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getReserveTotalBorrowsVariable(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    liquidity(overrides?: CallOverrides): Promise<[BigNumber]>;

    "liquidity()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    reserve(overrides?: CallOverrides): Promise<[string]>;

    "reserve()"(overrides?: CallOverrides): Promise<[string]>;

    setReserveAvailableLiquidity(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setReserveAvailableLiquidity(uint256)"(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setReserveCurrentAverageStableBorrowRate(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setReserveCurrentAverageStableBorrowRate(uint256)"(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setReserveCurrentLiquidityRate(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setReserveCurrentLiquidityRate(uint256)"(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setReserveTotalBorrowsStable(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setReserveTotalBorrowsStable(uint256)"(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setReserveTotalBorrowsVariable(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setReserveTotalBorrowsVariable(uint256)"(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    stableBorrowRate(overrides?: CallOverrides): Promise<[BigNumber]>;

    "stableBorrowRate()"(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  _setReserve(
    _reserve: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "_setReserve(address)"(
    _reserve: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  apr(overrides?: CallOverrides): Promise<BigNumber>;

  "apr()"(overrides?: CallOverrides): Promise<BigNumber>;

  borrowsStable(overrides?: CallOverrides): Promise<BigNumber>;

  "borrowsStable()"(overrides?: CallOverrides): Promise<BigNumber>;

  borrowsVariable(overrides?: CallOverrides): Promise<BigNumber>;

  "borrowsVariable()"(overrides?: CallOverrides): Promise<BigNumber>;

  getReserveAvailableLiquidity(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveAvailableLiquidity(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveCurrentAverageStableBorrowRate(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveCurrentAverageStableBorrowRate(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveCurrentLiquidityRate(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveCurrentLiquidityRate(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveInterestRateStrategyAddress(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<string>;

  "getReserveInterestRateStrategyAddress(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<string>;

  getReserveTotalBorrowsStable(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveTotalBorrowsStable(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getReserveTotalBorrowsVariable(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getReserveTotalBorrowsVariable(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  liquidity(overrides?: CallOverrides): Promise<BigNumber>;

  "liquidity()"(overrides?: CallOverrides): Promise<BigNumber>;

  reserve(overrides?: CallOverrides): Promise<string>;

  "reserve()"(overrides?: CallOverrides): Promise<string>;

  setReserveAvailableLiquidity(
    _newVal: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setReserveAvailableLiquidity(uint256)"(
    _newVal: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setReserveCurrentAverageStableBorrowRate(
    _newVal: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setReserveCurrentAverageStableBorrowRate(uint256)"(
    _newVal: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setReserveCurrentLiquidityRate(
    _newVal: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setReserveCurrentLiquidityRate(uint256)"(
    _newVal: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setReserveTotalBorrowsStable(
    _newVal: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setReserveTotalBorrowsStable(uint256)"(
    _newVal: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setReserveTotalBorrowsVariable(
    _newVal: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setReserveTotalBorrowsVariable(uint256)"(
    _newVal: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  stableBorrowRate(overrides?: CallOverrides): Promise<BigNumber>;

  "stableBorrowRate()"(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    _setReserve(_reserve: string, overrides?: CallOverrides): Promise<void>;

    "_setReserve(address)"(
      _reserve: string,
      overrides?: CallOverrides
    ): Promise<void>;

    apr(overrides?: CallOverrides): Promise<BigNumber>;

    "apr()"(overrides?: CallOverrides): Promise<BigNumber>;

    borrowsStable(overrides?: CallOverrides): Promise<BigNumber>;

    "borrowsStable()"(overrides?: CallOverrides): Promise<BigNumber>;

    borrowsVariable(overrides?: CallOverrides): Promise<BigNumber>;

    "borrowsVariable()"(overrides?: CallOverrides): Promise<BigNumber>;

    getReserveAvailableLiquidity(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveAvailableLiquidity(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveCurrentAverageStableBorrowRate(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveCurrentAverageStableBorrowRate(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveCurrentLiquidityRate(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveCurrentLiquidityRate(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveInterestRateStrategyAddress(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "getReserveInterestRateStrategyAddress(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<string>;

    getReserveTotalBorrowsStable(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveTotalBorrowsStable(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveTotalBorrowsVariable(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveTotalBorrowsVariable(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    liquidity(overrides?: CallOverrides): Promise<BigNumber>;

    "liquidity()"(overrides?: CallOverrides): Promise<BigNumber>;

    reserve(overrides?: CallOverrides): Promise<string>;

    "reserve()"(overrides?: CallOverrides): Promise<string>;

    setReserveAvailableLiquidity(
      _newVal: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setReserveAvailableLiquidity(uint256)"(
      _newVal: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setReserveCurrentAverageStableBorrowRate(
      _newVal: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setReserveCurrentAverageStableBorrowRate(uint256)"(
      _newVal: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setReserveCurrentLiquidityRate(
      _newVal: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setReserveCurrentLiquidityRate(uint256)"(
      _newVal: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setReserveTotalBorrowsStable(
      _newVal: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setReserveTotalBorrowsStable(uint256)"(
      _newVal: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setReserveTotalBorrowsVariable(
      _newVal: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "setReserveTotalBorrowsVariable(uint256)"(
      _newVal: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    stableBorrowRate(overrides?: CallOverrides): Promise<BigNumber>;

    "stableBorrowRate()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    _setReserve(
      _reserve: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "_setReserve(address)"(
      _reserve: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    apr(overrides?: CallOverrides): Promise<BigNumber>;

    "apr()"(overrides?: CallOverrides): Promise<BigNumber>;

    borrowsStable(overrides?: CallOverrides): Promise<BigNumber>;

    "borrowsStable()"(overrides?: CallOverrides): Promise<BigNumber>;

    borrowsVariable(overrides?: CallOverrides): Promise<BigNumber>;

    "borrowsVariable()"(overrides?: CallOverrides): Promise<BigNumber>;

    getReserveAvailableLiquidity(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveAvailableLiquidity(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveCurrentAverageStableBorrowRate(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveCurrentAverageStableBorrowRate(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveCurrentLiquidityRate(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveCurrentLiquidityRate(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveInterestRateStrategyAddress(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveInterestRateStrategyAddress(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveTotalBorrowsStable(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveTotalBorrowsStable(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReserveTotalBorrowsVariable(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReserveTotalBorrowsVariable(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    liquidity(overrides?: CallOverrides): Promise<BigNumber>;

    "liquidity()"(overrides?: CallOverrides): Promise<BigNumber>;

    reserve(overrides?: CallOverrides): Promise<BigNumber>;

    "reserve()"(overrides?: CallOverrides): Promise<BigNumber>;

    setReserveAvailableLiquidity(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setReserveAvailableLiquidity(uint256)"(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setReserveCurrentAverageStableBorrowRate(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setReserveCurrentAverageStableBorrowRate(uint256)"(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setReserveCurrentLiquidityRate(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setReserveCurrentLiquidityRate(uint256)"(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setReserveTotalBorrowsStable(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setReserveTotalBorrowsStable(uint256)"(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setReserveTotalBorrowsVariable(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setReserveTotalBorrowsVariable(uint256)"(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    stableBorrowRate(overrides?: CallOverrides): Promise<BigNumber>;

    "stableBorrowRate()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    _setReserve(
      _reserve: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "_setReserve(address)"(
      _reserve: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    apr(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "apr()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    borrowsStable(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "borrowsStable()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    borrowsVariable(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "borrowsVariable()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveAvailableLiquidity(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveAvailableLiquidity(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveCurrentAverageStableBorrowRate(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveCurrentAverageStableBorrowRate(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveCurrentLiquidityRate(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveCurrentLiquidityRate(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveInterestRateStrategyAddress(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveInterestRateStrategyAddress(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveTotalBorrowsStable(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveTotalBorrowsStable(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReserveTotalBorrowsVariable(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReserveTotalBorrowsVariable(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    liquidity(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "liquidity()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    reserve(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "reserve()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setReserveAvailableLiquidity(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setReserveAvailableLiquidity(uint256)"(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setReserveCurrentAverageStableBorrowRate(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setReserveCurrentAverageStableBorrowRate(uint256)"(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setReserveCurrentLiquidityRate(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setReserveCurrentLiquidityRate(uint256)"(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setReserveTotalBorrowsStable(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setReserveTotalBorrowsStable(uint256)"(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setReserveTotalBorrowsVariable(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setReserveTotalBorrowsVariable(uint256)"(
      _newVal: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    stableBorrowRate(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "stableBorrowRate()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
