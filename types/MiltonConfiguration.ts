/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface MiltonConfigurationInterface extends utils.Interface {
  contractName: "MiltonConfiguration";
  functions: {
    "getIncomeTaxPercentage()": FunctionFragment;
    "getIporPublicationFeeAmount()": FunctionFragment;
    "getLiquidationDepositAmount()": FunctionFragment;
    "getMaxCollateralizationFactorValue()": FunctionFragment;
    "getMaxLpUtilizationPerLegPercentage()": FunctionFragment;
    "getMaxLpUtilizationPercentage()": FunctionFragment;
    "getMaxSlippagePercentage()": FunctionFragment;
    "getMaxSwapCollateralAmount()": FunctionFragment;
    "getMiltonSpreadModel()": FunctionFragment;
    "getMinCollateralizationFactorValue()": FunctionFragment;
    "getOpeningFeeForTreasuryPercentage()": FunctionFragment;
    "getOpeningFeePercentage()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getIncomeTaxPercentage",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getIporPublicationFeeAmount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLiquidationDepositAmount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxCollateralizationFactorValue",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxLpUtilizationPerLegPercentage",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxLpUtilizationPercentage",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxSlippagePercentage",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMaxSwapCollateralAmount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMiltonSpreadModel",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMinCollateralizationFactorValue",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getOpeningFeeForTreasuryPercentage",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getOpeningFeePercentage",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "getIncomeTaxPercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getIporPublicationFeeAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLiquidationDepositAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxCollateralizationFactorValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxLpUtilizationPerLegPercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxLpUtilizationPercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxSlippagePercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMaxSwapCollateralAmount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMiltonSpreadModel",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMinCollateralizationFactorValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOpeningFeeForTreasuryPercentage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOpeningFeePercentage",
    data: BytesLike
  ): Result;

  events: {};
}

export interface MiltonConfiguration extends BaseContract {
  contractName: "MiltonConfiguration";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MiltonConfigurationInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getIncomeTaxPercentage(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getIncomeTaxPercentage()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    getIporPublicationFeeAmount(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getIporPublicationFeeAmount()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getLiquidationDepositAmount(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getLiquidationDepositAmount()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMaxCollateralizationFactorValue(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getMaxCollateralizationFactorValue()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMaxLpUtilizationPerLegPercentage(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getMaxLpUtilizationPerLegPercentage()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMaxLpUtilizationPercentage(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getMaxLpUtilizationPercentage()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMaxSlippagePercentage(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getMaxSlippagePercentage()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMaxSwapCollateralAmount(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getMaxSwapCollateralAmount()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getMiltonSpreadModel(overrides?: CallOverrides): Promise<[string]>;

    "getMiltonSpreadModel()"(overrides?: CallOverrides): Promise<[string]>;

    getMinCollateralizationFactorValue(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getMinCollateralizationFactorValue()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getOpeningFeeForTreasuryPercentage(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getOpeningFeeForTreasuryPercentage()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getOpeningFeePercentage(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getOpeningFeePercentage()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;
  };

  getIncomeTaxPercentage(overrides?: CallOverrides): Promise<BigNumber>;

  "getIncomeTaxPercentage()"(overrides?: CallOverrides): Promise<BigNumber>;

  getIporPublicationFeeAmount(overrides?: CallOverrides): Promise<BigNumber>;

  "getIporPublicationFeeAmount()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getLiquidationDepositAmount(overrides?: CallOverrides): Promise<BigNumber>;

  "getLiquidationDepositAmount()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getMaxCollateralizationFactorValue(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getMaxCollateralizationFactorValue()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getMaxLpUtilizationPerLegPercentage(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getMaxLpUtilizationPerLegPercentage()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getMaxLpUtilizationPercentage(overrides?: CallOverrides): Promise<BigNumber>;

  "getMaxLpUtilizationPercentage()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getMaxSlippagePercentage(overrides?: CallOverrides): Promise<BigNumber>;

  "getMaxSlippagePercentage()"(overrides?: CallOverrides): Promise<BigNumber>;

  getMaxSwapCollateralAmount(overrides?: CallOverrides): Promise<BigNumber>;

  "getMaxSwapCollateralAmount()"(overrides?: CallOverrides): Promise<BigNumber>;

  getMiltonSpreadModel(overrides?: CallOverrides): Promise<string>;

  "getMiltonSpreadModel()"(overrides?: CallOverrides): Promise<string>;

  getMinCollateralizationFactorValue(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getMinCollateralizationFactorValue()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getOpeningFeeForTreasuryPercentage(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getOpeningFeeForTreasuryPercentage()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getOpeningFeePercentage(overrides?: CallOverrides): Promise<BigNumber>;

  "getOpeningFeePercentage()"(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    getIncomeTaxPercentage(overrides?: CallOverrides): Promise<BigNumber>;

    "getIncomeTaxPercentage()"(overrides?: CallOverrides): Promise<BigNumber>;

    getIporPublicationFeeAmount(overrides?: CallOverrides): Promise<BigNumber>;

    "getIporPublicationFeeAmount()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLiquidationDepositAmount(overrides?: CallOverrides): Promise<BigNumber>;

    "getLiquidationDepositAmount()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaxCollateralizationFactorValue(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMaxCollateralizationFactorValue()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaxLpUtilizationPerLegPercentage(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMaxLpUtilizationPerLegPercentage()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaxLpUtilizationPercentage(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMaxLpUtilizationPercentage()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaxSlippagePercentage(overrides?: CallOverrides): Promise<BigNumber>;

    "getMaxSlippagePercentage()"(overrides?: CallOverrides): Promise<BigNumber>;

    getMaxSwapCollateralAmount(overrides?: CallOverrides): Promise<BigNumber>;

    "getMaxSwapCollateralAmount()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMiltonSpreadModel(overrides?: CallOverrides): Promise<string>;

    "getMiltonSpreadModel()"(overrides?: CallOverrides): Promise<string>;

    getMinCollateralizationFactorValue(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMinCollateralizationFactorValue()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOpeningFeeForTreasuryPercentage(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getOpeningFeeForTreasuryPercentage()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOpeningFeePercentage(overrides?: CallOverrides): Promise<BigNumber>;

    "getOpeningFeePercentage()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    getIncomeTaxPercentage(overrides?: CallOverrides): Promise<BigNumber>;

    "getIncomeTaxPercentage()"(overrides?: CallOverrides): Promise<BigNumber>;

    getIporPublicationFeeAmount(overrides?: CallOverrides): Promise<BigNumber>;

    "getIporPublicationFeeAmount()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLiquidationDepositAmount(overrides?: CallOverrides): Promise<BigNumber>;

    "getLiquidationDepositAmount()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaxCollateralizationFactorValue(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMaxCollateralizationFactorValue()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaxLpUtilizationPerLegPercentage(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMaxLpUtilizationPerLegPercentage()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaxLpUtilizationPercentage(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMaxLpUtilizationPercentage()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMaxSlippagePercentage(overrides?: CallOverrides): Promise<BigNumber>;

    "getMaxSlippagePercentage()"(overrides?: CallOverrides): Promise<BigNumber>;

    getMaxSwapCollateralAmount(overrides?: CallOverrides): Promise<BigNumber>;

    "getMaxSwapCollateralAmount()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getMiltonSpreadModel(overrides?: CallOverrides): Promise<BigNumber>;

    "getMiltonSpreadModel()"(overrides?: CallOverrides): Promise<BigNumber>;

    getMinCollateralizationFactorValue(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getMinCollateralizationFactorValue()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOpeningFeeForTreasuryPercentage(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getOpeningFeeForTreasuryPercentage()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOpeningFeePercentage(overrides?: CallOverrides): Promise<BigNumber>;

    "getOpeningFeePercentage()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    getIncomeTaxPercentage(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getIncomeTaxPercentage()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getIporPublicationFeeAmount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getIporPublicationFeeAmount()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLiquidationDepositAmount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLiquidationDepositAmount()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMaxCollateralizationFactorValue(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMaxCollateralizationFactorValue()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMaxLpUtilizationPerLegPercentage(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMaxLpUtilizationPerLegPercentage()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMaxLpUtilizationPercentage(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMaxLpUtilizationPercentage()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMaxSlippagePercentage(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMaxSlippagePercentage()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMaxSwapCollateralAmount(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMaxSwapCollateralAmount()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMiltonSpreadModel(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMiltonSpreadModel()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMinCollateralizationFactorValue(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getMinCollateralizationFactorValue()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOpeningFeeForTreasuryPercentage(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOpeningFeeForTreasuryPercentage()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOpeningFeePercentage(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOpeningFeePercentage()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
