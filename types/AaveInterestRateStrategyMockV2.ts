/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface AaveInterestRateStrategyMockV2Interface
  extends utils.Interface {
  contractName: "AaveInterestRateStrategyMockV2";
  functions: {
    "_setBorrowRate(uint256)": FunctionFragment;
    "_setSupplyRate(uint256)": FunctionFragment;
    "borrowRate()": FunctionFragment;
    "calculateInterestRates(address,uint256,uint256,uint256,uint256,uint256)": FunctionFragment;
    "getBaseVariableBorrowRate()": FunctionFragment;
    "supplyRate()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "_setBorrowRate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "_setSupplyRate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "borrowRate",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "calculateInterestRates",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getBaseVariableBorrowRate",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "supplyRate",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "_setBorrowRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_setSupplyRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "borrowRate", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "calculateInterestRates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getBaseVariableBorrowRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "supplyRate", data: BytesLike): Result;

  events: {};
}

export interface AaveInterestRateStrategyMockV2 extends BaseContract {
  contractName: "AaveInterestRateStrategyMockV2";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: AaveInterestRateStrategyMockV2Interface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    _setBorrowRate(
      _borrowRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "_setBorrowRate(uint256)"(
      _borrowRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    _setSupplyRate(
      _supplyRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "_setSupplyRate(uint256)"(
      _supplyRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    borrowRate(overrides?: CallOverrides): Promise<[BigNumber]>;

    "borrowRate()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    calculateInterestRates(
      arg0: string,
      arg1: BigNumberish,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BigNumberish,
      arg5: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber]>;

    "calculateInterestRates(address,uint256,uint256,uint256,uint256,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BigNumberish,
      arg5: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber]>;

    getBaseVariableBorrowRate(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getBaseVariableBorrowRate()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    supplyRate(overrides?: CallOverrides): Promise<[BigNumber]>;

    "supplyRate()"(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  _setBorrowRate(
    _borrowRate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "_setBorrowRate(uint256)"(
    _borrowRate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  _setSupplyRate(
    _supplyRate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "_setSupplyRate(uint256)"(
    _supplyRate: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  borrowRate(overrides?: CallOverrides): Promise<BigNumber>;

  "borrowRate()"(overrides?: CallOverrides): Promise<BigNumber>;

  calculateInterestRates(
    arg0: string,
    arg1: BigNumberish,
    arg2: BigNumberish,
    arg3: BigNumberish,
    arg4: BigNumberish,
    arg5: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber]>;

  "calculateInterestRates(address,uint256,uint256,uint256,uint256,uint256)"(
    arg0: string,
    arg1: BigNumberish,
    arg2: BigNumberish,
    arg3: BigNumberish,
    arg4: BigNumberish,
    arg5: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, BigNumber]>;

  getBaseVariableBorrowRate(overrides?: CallOverrides): Promise<BigNumber>;

  "getBaseVariableBorrowRate()"(overrides?: CallOverrides): Promise<BigNumber>;

  supplyRate(overrides?: CallOverrides): Promise<BigNumber>;

  "supplyRate()"(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    _setBorrowRate(
      _borrowRate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "_setBorrowRate(uint256)"(
      _borrowRate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    _setSupplyRate(
      _supplyRate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "_setSupplyRate(uint256)"(
      _supplyRate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    borrowRate(overrides?: CallOverrides): Promise<BigNumber>;

    "borrowRate()"(overrides?: CallOverrides): Promise<BigNumber>;

    calculateInterestRates(
      arg0: string,
      arg1: BigNumberish,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BigNumberish,
      arg5: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber]>;

    "calculateInterestRates(address,uint256,uint256,uint256,uint256,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BigNumberish,
      arg5: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, BigNumber]>;

    getBaseVariableBorrowRate(overrides?: CallOverrides): Promise<BigNumber>;

    "getBaseVariableBorrowRate()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    supplyRate(overrides?: CallOverrides): Promise<BigNumber>;

    "supplyRate()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    _setBorrowRate(
      _borrowRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "_setBorrowRate(uint256)"(
      _borrowRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    _setSupplyRate(
      _supplyRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "_setSupplyRate(uint256)"(
      _supplyRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    borrowRate(overrides?: CallOverrides): Promise<BigNumber>;

    "borrowRate()"(overrides?: CallOverrides): Promise<BigNumber>;

    calculateInterestRates(
      arg0: string,
      arg1: BigNumberish,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BigNumberish,
      arg5: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "calculateInterestRates(address,uint256,uint256,uint256,uint256,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BigNumberish,
      arg5: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getBaseVariableBorrowRate(overrides?: CallOverrides): Promise<BigNumber>;

    "getBaseVariableBorrowRate()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    supplyRate(overrides?: CallOverrides): Promise<BigNumber>;

    "supplyRate()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    _setBorrowRate(
      _borrowRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "_setBorrowRate(uint256)"(
      _borrowRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    _setSupplyRate(
      _supplyRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "_setSupplyRate(uint256)"(
      _supplyRate: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    borrowRate(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "borrowRate()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    calculateInterestRates(
      arg0: string,
      arg1: BigNumberish,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BigNumberish,
      arg5: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "calculateInterestRates(address,uint256,uint256,uint256,uint256,uint256)"(
      arg0: string,
      arg1: BigNumberish,
      arg2: BigNumberish,
      arg3: BigNumberish,
      arg4: BigNumberish,
      arg5: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getBaseVariableBorrowRate(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getBaseVariableBorrowRate()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    supplyRate(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "supplyRate()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
