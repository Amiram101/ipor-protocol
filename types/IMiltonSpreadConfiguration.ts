/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface IMiltonSpreadConfigurationInterface extends utils.Interface {
  contractName: "IMiltonSpreadConfiguration";
  functions: {
    "getAtParComponentKHistValue()": FunctionFragment;
    "getAtParComponentKVolValue()": FunctionFragment;
    "getDCKOmegaValue()": FunctionFragment;
    "getDCKfValue()": FunctionFragment;
    "getDCLambdaValue()": FunctionFragment;
    "getDCMaxLiquidityRedemptionValue()": FunctionFragment;
    "getSpreadPremiumsMaxValue()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getAtParComponentKHistValue",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAtParComponentKVolValue",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDCKOmegaValue",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDCKfValue",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDCLambdaValue",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDCMaxLiquidityRedemptionValue",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getSpreadPremiumsMaxValue",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "getAtParComponentKHistValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAtParComponentKVolValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDCKOmegaValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDCKfValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDCLambdaValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDCMaxLiquidityRedemptionValue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSpreadPremiumsMaxValue",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IMiltonSpreadConfiguration extends BaseContract {
  contractName: "IMiltonSpreadConfiguration";
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IMiltonSpreadConfigurationInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    getAtParComponentKHistValue(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getAtParComponentKHistValue()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getAtParComponentKVolValue(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getAtParComponentKVolValue()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getDCKOmegaValue(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getDCKOmegaValue()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    getDCKfValue(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getDCKfValue()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    getDCLambdaValue(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getDCLambdaValue()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    getDCMaxLiquidityRedemptionValue(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getDCMaxLiquidityRedemptionValue()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getSpreadPremiumsMaxValue(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getSpreadPremiumsMaxValue()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;
  };

  getAtParComponentKHistValue(overrides?: CallOverrides): Promise<BigNumber>;

  "getAtParComponentKHistValue()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAtParComponentKVolValue(overrides?: CallOverrides): Promise<BigNumber>;

  "getAtParComponentKVolValue()"(overrides?: CallOverrides): Promise<BigNumber>;

  getDCKOmegaValue(overrides?: CallOverrides): Promise<BigNumber>;

  "getDCKOmegaValue()"(overrides?: CallOverrides): Promise<BigNumber>;

  getDCKfValue(overrides?: CallOverrides): Promise<BigNumber>;

  "getDCKfValue()"(overrides?: CallOverrides): Promise<BigNumber>;

  getDCLambdaValue(overrides?: CallOverrides): Promise<BigNumber>;

  "getDCLambdaValue()"(overrides?: CallOverrides): Promise<BigNumber>;

  getDCMaxLiquidityRedemptionValue(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getDCMaxLiquidityRedemptionValue()"(
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getSpreadPremiumsMaxValue(overrides?: CallOverrides): Promise<BigNumber>;

  "getSpreadPremiumsMaxValue()"(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    getAtParComponentKHistValue(overrides?: CallOverrides): Promise<BigNumber>;

    "getAtParComponentKHistValue()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAtParComponentKVolValue(overrides?: CallOverrides): Promise<BigNumber>;

    "getAtParComponentKVolValue()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDCKOmegaValue(overrides?: CallOverrides): Promise<BigNumber>;

    "getDCKOmegaValue()"(overrides?: CallOverrides): Promise<BigNumber>;

    getDCKfValue(overrides?: CallOverrides): Promise<BigNumber>;

    "getDCKfValue()"(overrides?: CallOverrides): Promise<BigNumber>;

    getDCLambdaValue(overrides?: CallOverrides): Promise<BigNumber>;

    "getDCLambdaValue()"(overrides?: CallOverrides): Promise<BigNumber>;

    getDCMaxLiquidityRedemptionValue(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getDCMaxLiquidityRedemptionValue()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSpreadPremiumsMaxValue(overrides?: CallOverrides): Promise<BigNumber>;

    "getSpreadPremiumsMaxValue()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    getAtParComponentKHistValue(overrides?: CallOverrides): Promise<BigNumber>;

    "getAtParComponentKHistValue()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAtParComponentKVolValue(overrides?: CallOverrides): Promise<BigNumber>;

    "getAtParComponentKVolValue()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDCKOmegaValue(overrides?: CallOverrides): Promise<BigNumber>;

    "getDCKOmegaValue()"(overrides?: CallOverrides): Promise<BigNumber>;

    getDCKfValue(overrides?: CallOverrides): Promise<BigNumber>;

    "getDCKfValue()"(overrides?: CallOverrides): Promise<BigNumber>;

    getDCLambdaValue(overrides?: CallOverrides): Promise<BigNumber>;

    "getDCLambdaValue()"(overrides?: CallOverrides): Promise<BigNumber>;

    getDCMaxLiquidityRedemptionValue(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getDCMaxLiquidityRedemptionValue()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSpreadPremiumsMaxValue(overrides?: CallOverrides): Promise<BigNumber>;

    "getSpreadPremiumsMaxValue()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getAtParComponentKHistValue(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAtParComponentKHistValue()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAtParComponentKVolValue(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAtParComponentKVolValue()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDCKOmegaValue(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getDCKOmegaValue()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDCKfValue(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getDCKfValue()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getDCLambdaValue(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getDCLambdaValue()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDCMaxLiquidityRedemptionValue(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getDCMaxLiquidityRedemptionValue()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSpreadPremiumsMaxValue(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getSpreadPremiumsMaxValue()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
