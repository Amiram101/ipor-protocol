/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ComptrollerMock,
  ComptrollerMockInterface,
} from "../ComptrollerMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_comp",
        type: "address",
      },
      {
        internalType: "address",
        name: "_cToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "cTokenAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
    ],
    name: "claimComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "borrowers",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "suppliers",
        type: "bool",
      },
    ],
    name: "claimComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sender",
        type: "address",
      },
    ],
    name: "claimComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cToken",
        type: "address",
      },
    ],
    name: "compSpeeds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108d03803806108d083398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b610812806100be6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063271f88b41161005b578063271f88b4146100e95780636810dfa6146100fc578063b7dd34831461010f578063e9af02921461012257600080fd5b8063197a1569146100825780631c3db2e0146100b25780631d7b33d7146100c7575b600080fd5b600054610095906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100c56100c036600461058b565b610135565b005b6100db6100d5366004610663565b50600090565b6040519081526020016100a9565b6100c56100f7366004610685565b600255565b6100c561010a3660046106fb565b610250565b600154610095906001600160a01b031681565b6100c5610130366004610663565b61043f565b6000546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90849083906370a082319060240160206040518083038186803b15801561018257600080fd5b505afa158015610196573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ba9190610790565b600254116101ca576002546101cd565b60005b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561021357600080fd5b505af1158015610227573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024b91906107a9565b505050565b83836000818110610263576102636107c6565b90506020020160208101906102789190610663565b6001546001600160a01b039081169116146102c95760405162461bcd60e51b815260206004820152600c60248201526b2bb937b7339031aa37b5b2b760a11b60448201526064015b60405180910390fd5b811580156102d45750805b6103205760405162461bcd60e51b815260206004820152601d60248201527f4f6e6c7920737570706c696572732073686f756c64206265207472756500000060448201526064016102c0565b6000546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90339083906370a082319060240160206040518083038186803b15801561036d57600080fd5b505afa158015610381573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a59190610790565b600254116103b5576002546103b8565b60005b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156103fe57600080fd5b505af1158015610412573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043691906107a9565b50505050505050565b6000546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90839083906370a082319060240160206040518083038186803b15801561048c57600080fd5b505afa1580156104a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c49190610790565b600254116104d4576002546104d7565b60005b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561051d57600080fd5b505af1158015610531573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055591906107a9565b5050565b80356001600160a01b038116811461057057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561059e57600080fd5b6105a783610559565b915060208084013567ffffffffffffffff808211156105c557600080fd5b818601915086601f8301126105d957600080fd5b8135818111156105eb576105eb610575565b8060051b604051601f19603f8301168101818110858211171561061057610610610575565b60405291825284820192508381018501918983111561062e57600080fd5b938501935b828510156106535761064485610559565b84529385019392850192610633565b8096505050505050509250929050565b60006020828403121561067557600080fd5b61067e82610559565b9392505050565b60006020828403121561069757600080fd5b5035919050565b60008083601f8401126106b057600080fd5b50813567ffffffffffffffff8111156106c857600080fd5b6020830191508360208260051b85010111156106e357600080fd5b9250929050565b80151581146106f857600080fd5b50565b6000806000806000806080878903121561071457600080fd5b863567ffffffffffffffff8082111561072c57600080fd5b6107388a838b0161069e565b9098509650602089013591508082111561075157600080fd5b5061075e89828a0161069e565b9095509350506040870135610772816106ea565b91506060870135610782816106ea565b809150509295509295509295565b6000602082840312156107a257600080fd5b5051919050565b6000602082840312156107bb57600080fd5b815161067e816106ea565b634e487b7160e01b600052603260045260246000fdfea26469706673582212206bfb5615732d3fac778ede0fbab7477d3682b484a4e00980e03cbe709e2b52d264736f6c63430008090033";

type ComptrollerMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ComptrollerMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ComptrollerMock__factory extends ContractFactory {
  constructor(...args: ComptrollerMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ComptrollerMock";
  }

  deploy(
    _comp: string,
    _cToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ComptrollerMock> {
    return super.deploy(
      _comp,
      _cToken,
      overrides || {}
    ) as Promise<ComptrollerMock>;
  }
  getDeployTransaction(
    _comp: string,
    _cToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_comp, _cToken, overrides || {});
  }
  attach(address: string): ComptrollerMock {
    return super.attach(address) as ComptrollerMock;
  }
  connect(signer: Signer): ComptrollerMock__factory {
    return super.connect(signer) as ComptrollerMock__factory;
  }
  static readonly contractName: "ComptrollerMock";
  public readonly contractName: "ComptrollerMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ComptrollerMockInterface {
    return new utils.Interface(_abi) as ComptrollerMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ComptrollerMock {
    return new Contract(address, _abi, signerOrProvider) as ComptrollerMock;
  }
}
