/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockSoapIndicatorLogic,
  MockSoapIndicatorLogicInterface,
} from "../MockSoapIndicatorLogic";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalNotional",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "averageInterestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "derivativeNotional",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFixedInterestRate",
        type: "uint256",
      },
    ],
    name: "calculateInterestRateWhenCloseSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalNotional",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "averageInterestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "derivativeNotional",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFixedInterestRate",
        type: "uint256",
      },
    ],
    name: "calculateInterestRateWhenOpenSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rebalanceTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalNotional",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "averageInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalIbtQuantity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quasiHypotheticalInterestCumulative",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.SoapIndicatorMemory",
        name: "si",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "calculateTimestamp",
        type: "uint256",
      },
    ],
    name: "calculateQuasiHyphoteticalInterestTotal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "calculateTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRebalanceTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalNotional",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "averageInterestRate",
        type: "uint256",
      },
    ],
    name: "calculateQuasiHypotheticalInterestDelta",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "calculateTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "derivativeOpenTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "derivativeNotional",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFixedInterestRate",
        type: "uint256",
      },
    ],
    name: "calculateQuasiInterestPaidOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rebalanceTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalNotional",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "averageInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalIbtQuantity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quasiHypotheticalInterestCumulative",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.SoapIndicatorMemory",
        name: "si",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "calculateTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ibtPrice",
        type: "uint256",
      },
    ],
    name: "calculateQuasiSoapPayFixed",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rebalanceTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalNotional",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "averageInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalIbtQuantity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quasiHypotheticalInterestCumulative",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.SoapIndicatorMemory",
        name: "si",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "calculateTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ibtPrice",
        type: "uint256",
      },
    ],
    name: "calculateQuasiSoapReceiveFixed",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rebalanceTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalNotional",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "averageInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalIbtQuantity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quasiHypotheticalInterestCumulative",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.SoapIndicatorMemory",
        name: "si",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "calculateTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ibtPrice",
        type: "uint256",
      },
    ],
    name: "calculateSoapPayFixed",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rebalanceTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalNotional",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "averageInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalIbtQuantity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quasiHypotheticalInterestCumulative",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.SoapIndicatorMemory",
        name: "si",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "calculateTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ibtPrice",
        type: "uint256",
      },
    ],
    name: "calculateSoapReceiveFixed",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rebalanceTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalNotional",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "averageInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalIbtQuantity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quasiHypotheticalInterestCumulative",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.SoapIndicatorMemory",
        name: "si",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "rebalanceTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "derivativeOpenTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "derivativeNotional",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFixedInterestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "derivativeIbtQuantity",
        type: "uint256",
      },
    ],
    name: "rebalanceWhenCloseSwap",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rebalanceTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalNotional",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "averageInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalIbtQuantity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quasiHypotheticalInterestCumulative",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.SoapIndicatorMemory",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rebalanceTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalNotional",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "averageInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalIbtQuantity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quasiHypotheticalInterestCumulative",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.SoapIndicatorMemory",
        name: "si",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "rebalanceTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "derivativeNotional",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFixedInterestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "derivativeIbtQuantity",
        type: "uint256",
      },
    ],
    name: "rebalanceWhenOpenSwap",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "rebalanceTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalNotional",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "averageInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalIbtQuantity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "quasiHypotheticalInterestCumulative",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.SoapIndicatorMemory",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c02806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80634b06bd9c116100715780634b06bd9c146101625780637622beff1461017557806379b323cb14610188578063a4cf97b51461019b578063aa99bb02146101ae578063ad449982146101c157600080fd5b80631cf5f57f146100ae5780631e1502b4146100d457806323e84657146100e757806331baa42d1461013c578063334db9ae1461014f575b600080fd5b6100c16100bc366004610899565b6101d4565b6040519081526020015b60405180910390f35b6100c16100e2366004610949565b6101ed565b6100fa6100f536600461097d565b6101fa565b6040516100cb9190600060a082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015292915050565b6100c161014a366004610949565b61021b565b6100c161015d366004610949565b610228565b6100c1610170366004610899565b610235565b6100c16101833660046109cb565b610243565b6100c1610196366004610949565b610256565b6100c16101a9366004610899565b610263565b6100c16101bc366004610899565b610271565b6100fa6101cf3660046109f6565b61027f565b60006101e28585858561029e565b90505b949350505050565b60006101e584848461031d565b61020261086a565b610210878787878787610353565b979650505050505050565b60006101e5848484610408565b60006101e5848484610418565b60006101e2858585856104a3565b600061024f838361052f565b9392505050565b60006101e5848484610558565b60006101e2858585856105c0565b60006101e28585858561062c565b61028761086a565b6102948686868686610659565b9695505050505050565b60008385101560405180604001604052806007815260200166049504f525f32360cc1b815250906102eb5760405162461bcd60e51b81526004016102e29190610a3b565b60405180910390fd5b50670de0b6b3a76400006102ff8587610aa6565b6103098486610abd565b6103139190610abd565b6101e29190610abd565b60006101e561032d858585610418565b6301e13380610344670de0b6b3a764000080610abd565b61034e9190610abd565b6106ea565b61035b61086a565b6000610367888861052f565b905060006103778888888861029e565b905060006103858284610aa6565b9050808a608001818152505060006103a78b602001518c604001518a8a6104a3565b90506103b28a61070c565b63ffffffff168b526103c388610775565b6001600160801b03168b602001516103db9190610aa6565b60208c015260608b01516103f0908790610aa6565b60608c015260408b0152509798975050505050505050565b60006101e561032d858585610558565b60006104526104336301e13380670de0b6b3a7640000610abd565b8386606001516104439190610abd565b61044d9190610abd565b6107de565b61049961045f868661052f565b6301e13380610476670de0b6b3a764000080610abd565b6104809190610abd565b876020015161048f9190610abd565b61044d9190610adc565b6101e59190610af4565b6000848311156040518060400160405280600781526020016649504f525f313960c81b815250906104e75760405162461bcd60e51b81526004016102e29190610a3b565b50848314156104f8575060006101e5565b6105286105058385610abd565b61050f8688610abd565b6105199190610aa6565b6105238588610aa6565b610848565b90506101e5565b6000610549828460000151856020015186604001516105c0565b836080015161024f9190610adc565b6000610597610567858561052f565b6301e1338061057e670de0b6b3a764000080610abd565b6105889190610abd565b866020015161048f9190610abd565b6104996105b06301e13380670de0b6b3a7640000610abd565b8487606001516104439190610abd565b6000838510156040518060400160405280600781526020016649504f525f323160c81b815250906106045760405162461bcd60e51b81526004016102e29190610a3b565b50670de0b6b3a76400006106188587610aa6565b6106229190610abd565b6103138385610abd565b60006101e261063b8385610abd565b6106458688610abd565b61064f9190610adc565b6105238588610adc565b61066161086a565b600061067787602001518860400151878761062c565b90506000610685888861052f565b90506106908761070c565b63ffffffff1688526106a186610775565b6001600160801b031688602001516106b99190610adc565b602089015260608801516106ce908590610adc565b6060890152604088019190915260808701525093949350505050565b6000816106f8600282610b49565b6107029085610b77565b61024f9190610b49565b600063ffffffff8211156107715760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016102e2565b5090565b60006001600160801b038211156107715760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b60648201526084016102e2565b60006001600160ff1b038211156107715760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084016102e2565b600081610856600282610bb8565b6108609085610adc565b61024f9190610bb8565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b600080600080608085870312156108af57600080fd5b5050823594602084013594506040840135936060013592509050565b600060a082840312156108dd57600080fd5b60405160a0810181811067ffffffffffffffff8211171561090e57634e487b7160e01b600052604160045260246000fd5b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b600080600060e0848603121561095e57600080fd5b61096885856108cb565b9560a0850135955060c0909401359392505050565b600080600080600080610140878903121561099757600080fd5b6109a188886108cb565b9860a0880135985060c08801359760e0810135975061010081013596506101200135945092505050565b60008060c083850312156109de57600080fd5b6109e884846108cb565b9460a0939093013593505050565b60008060008060006101208688031215610a0f57600080fd5b610a1987876108cb565b9760a0870135975060c08701359660e081013596506101000135945092505050565b600060208083528351808285015260005b81811015610a6857858101830151858201604001528201610a4c565b81811115610a7a576000604083870101525b50601f01601f1916929092016040019392505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610ab857610ab8610a90565b500390565b6000816000190483118215151615610ad757610ad7610a90565b500290565b60008219821115610aef57610aef610a90565b500190565b60008083128015600160ff1b850184121615610b1257610b12610a90565b6001600160ff1b0384018313811615610b2d57610b2d610a90565b50500390565b634e487b7160e01b600052601260045260246000fd5b600082610b5857610b58610b33565b600160ff1b821460001984141615610b7257610b72610a90565b500590565b600080821280156001600160ff1b0384900385131615610b9957610b99610a90565b600160ff1b8390038412811615610bb257610bb2610a90565b50500190565b600082610bc757610bc7610b33565b50049056fea2646970667358221220ef22f8c3acd9a3a4069fbb6a09565f2c5e1df7131a8486e46eb857a1fb11a25364736f6c63430008090033";

type MockSoapIndicatorLogicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockSoapIndicatorLogicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockSoapIndicatorLogic__factory extends ContractFactory {
  constructor(...args: MockSoapIndicatorLogicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockSoapIndicatorLogic";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockSoapIndicatorLogic> {
    return super.deploy(overrides || {}) as Promise<MockSoapIndicatorLogic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockSoapIndicatorLogic {
    return super.attach(address) as MockSoapIndicatorLogic;
  }
  connect(signer: Signer): MockSoapIndicatorLogic__factory {
    return super.connect(signer) as MockSoapIndicatorLogic__factory;
  }
  static readonly contractName: "MockSoapIndicatorLogic";
  public readonly contractName: "MockSoapIndicatorLogic";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSoapIndicatorLogicInterface {
    return new utils.Interface(_abi) as MockSoapIndicatorLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockSoapIndicatorLogic {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockSoapIndicatorLogic;
  }
}
