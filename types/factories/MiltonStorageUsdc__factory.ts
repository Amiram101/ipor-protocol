/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MiltonStorageUsdc,
  MiltonStorageUsdcInterface,
} from "../MiltonStorageUsdc";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "appointedOwner",
        type: "address",
      },
    ],
    name: "AppointedToTransferOwnership",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidityAmount",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidityAmount",
        type: "uint256",
      },
    ],
    name: "addLiquidityAssetManagmentMock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ibtPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculateTimestamp",
        type: "uint256",
      },
    ],
    name: "calculateSoap",
    outputs: [
      {
        internalType: "int256",
        name: "soapPf",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "soapRf",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "soap",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ibtPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculateTimestamp",
        type: "uint256",
      },
    ],
    name: "calculateSoapPayFixed",
    outputs: [
      {
        internalType: "int256",
        name: "soapPf",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ibtPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "calculateTimestamp",
        type: "uint256",
      },
    ],
    name: "calculateSoapReceiveFixed",
    outputs: [
      {
        internalType: "int256",
        name: "soapRf",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmTransferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "payFixedSwaps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receiveFixedSwaps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vault",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.MiltonBalanceMemory",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExtendedBalance",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "payFixedSwaps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receiveFixedSwaps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityPool",
            type: "uint256",
          },
          {
            internalType: "uint128",
            name: "vault",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "openingFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationDeposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "iporPublicationFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "treasury",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.MiltonExtendedBalanceMemory",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastSwapId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapId",
        type: "uint256",
      },
    ],
    name: "getSwapPayFixed",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "state",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "idsIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationDepositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "notionalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fixedInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtQuantity",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.IporSwapMemory",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getSwapPayFixedIds",
    outputs: [
      {
        internalType: "uint128[]",
        name: "",
        type: "uint128[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapId",
        type: "uint256",
      },
    ],
    name: "getSwapReceiveFixed",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "state",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "idsIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationDepositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "notionalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fixedInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtQuantity",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.IporSwapMemory",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getSwapReceiveFixedIds",
    outputs: [
      {
        internalType: "uint128[]",
        name: "",
        type: "uint128[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getSwapsPayFixed",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "state",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "idsIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationDepositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "notionalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fixedInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtQuantity",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.IporSwapMemory[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getSwapsReceiveFixed",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "state",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "idsIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationDepositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "notionalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fixedInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtQuantity",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.IporSwapMemory[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalOutstandingNotional",
    outputs: [
      {
        internalType: "uint256",
        name: "payFixedTotalNotional",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "recFixedTotalNotional",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "joseph",
        type: "address",
      },
    ],
    name: "setJoseph",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "milton",
        type: "address",
      },
    ],
    name: "setMilton",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "liquidityAmount",
        type: "uint256",
      },
    ],
    name: "subtractLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "appointedOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "state",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "idsIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationDepositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "notionalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fixedInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtQuantity",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.IporSwapMemory",
        name: "iporSwap",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "positionValue",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "closingTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cfgIncomeTaxPercentage",
        type: "uint256",
      },
    ],
    name: "updateStorageWhenCloseSwapPayFixed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "state",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "idsIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationDepositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "notionalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fixedInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtQuantity",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.IporSwapMemory",
        name: "iporSwap",
        type: "tuple",
      },
      {
        internalType: "int256",
        name: "positionValue",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "closingTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cfgIncomeTaxPercentage",
        type: "uint256",
      },
    ],
    name: "updateStorageWhenCloseSwapReceiveFixed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "depositValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vaultBalance",
        type: "uint256",
      },
    ],
    name: "updateStorageWhenDepositToVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationDepositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "notionalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fixedInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtQuantity",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.NewSwap",
        name: "newSwap",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "openingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cfgLiquidationDepositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cfgIporPublicationFeeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cfgOpeningFeeForTreasuryPercentage",
        type: "uint256",
      },
    ],
    name: "updateStorageWhenOpenSwapPayFixed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationDepositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "notionalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fixedInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtQuantity",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.NewSwap",
        name: "newSwap",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "openingAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cfgLiquidationDepositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cfgIporPublicationFeeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cfgOpeningFeeForTreasuryPercentage",
        type: "uint256",
      },
    ],
    name: "updateStorageWhenOpenSwapReceiveFixed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "transferedAmount",
        type: "uint256",
      },
    ],
    name: "updateStorageWhenTransferPublicationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "withdrawnValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "vaultBalance",
        type: "uint256",
      },
    ],
    name: "updateStorageWhenWithdrawFromVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "";

type MiltonStorageUsdcConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MiltonStorageUsdcConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MiltonStorageUsdc__factory extends ContractFactory {
  constructor(...args: MiltonStorageUsdcConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MiltonStorageUsdc";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MiltonStorageUsdc> {
    return super.deploy(overrides || {}) as Promise<MiltonStorageUsdc>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MiltonStorageUsdc {
    return super.attach(address) as MiltonStorageUsdc;
  }
  connect(signer: Signer): MiltonStorageUsdc__factory {
    return super.connect(signer) as MiltonStorageUsdc__factory;
  }
  static readonly contractName: "MiltonStorageUsdc";
  public readonly contractName: "MiltonStorageUsdc";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MiltonStorageUsdcInterface {
    return new utils.Interface(_abi) as MiltonStorageUsdcInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MiltonStorageUsdc {
    return new Contract(address, _abi, signerOrProvider) as MiltonStorageUsdc;
  }
}
