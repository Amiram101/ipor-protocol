/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakedAaveMock,
  StakedAaveMockInterface,
} from "../StakedAaveMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_aaveMock",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "COOLDOWN_SECONDS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNSTAKE_WINDOW",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aaveMock",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cooldown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "cooldownMapping",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cooldownStartTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setCooldowns",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "stakersCooldowns",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052620d2f006006556202a3006007553480156200001f57600080fd5b5060405162000f4e38038062000f4e833981016040819052620000429162000263565b60408051808201825260078082526673746b4141564560c81b6020808401828152855180870190965292855284015281519192916200008491600391620001bd565b5080516200009a906004906020840190620001bd565b5050600580546001600160a01b0319166001600160a01b03841617905550620000ce3369d3c21bcecceda1000000620000d5565b50620002f9565b6001600160a01b038216620001305760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b806002600082825462000144919062000295565b90915550506001600160a01b038216600090815260208190526040812080548392906200017390849062000295565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001cb90620002bc565b90600052602060002090601f016020900481019282620001ef57600085556200023a565b82601f106200020a57805160ff19168380011785556200023a565b828001600101855582156200023a579182015b828111156200023a5782518255916020019190600101906200021d565b50620002489291506200024c565b5090565b5b808211156200024857600081556001016200024d565b6000602082840312156200027657600080fd5b81516001600160a01b03811681146200028e57600080fd5b9392505050565b60008219821115620002b757634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620002d157607f821691505b60208210811415620002f357634e487b7160e01b600052602260045260246000fd5b50919050565b610c4580620003096000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063619d14b1116100ad578063a457c2d711610071578063a457c2d714610274578063a9059cbb14610287578063b235dd301461029a578063b5c68d93146102c5578063dd62ed3e146102ce57600080fd5b8063619d14b11461021357806370a082311461021b57806372b49d6314610244578063787a08a61461024d57806395d89b411461026c57600080fd5b806323b872dd116100f457806323b872dd146101b2578063313ce567146101c5578063359c4a96146101d457806335c755f1146101dd578063395093511461020057600080fd5b806306fdde0314610131578063091030c31461014f578063095ea7b31461017257806318160ddd146101955780631e9a69501461019d575b600080fd5b610139610307565b6040516101469190610a41565b60405180910390f35b61016461015d366004610ab2565b5060085490565b604051908152602001610146565b610185610180366004610ad4565b610399565b6040519015158152602001610146565b600254610164565b6101b06101ab366004610ad4565b6103b1565b005b6101856101c0366004610afe565b610446565b60405160128152602001610146565b61016460075481565b6101856101eb366004610ab2565b60096020526000908152604090205460ff1681565b61018561020e366004610ad4565b61046a565b6101b06104a9565b610164610229366004610ab2565b6001600160a01b031660009081526020819052604090205490565b61016460065481565b6101b0336000908152600960205260409020805460ff19166001179055565b6101396104bb565b610185610282366004610ad4565b6104ca565b610185610295366004610ad4565b610561565b6005546102ad906001600160a01b031681565b6040516001600160a01b039091168152602001610146565b61016460085481565b6101646102dc366004610b3a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461031690610b6d565b80601f016020809104026020016040519081016040528092919081815260200182805461034290610b6d565b801561038f5780601f106103645761010080835404028352916020019161038f565b820191906000526020600020905b81548152906001019060200180831161037257829003601f168201915b5050505050905090565b6000336103a781858561056f565b5060019392505050565b6103bb8282610693565b60055460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b15801561040957600080fd5b505af115801561041d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104419190610ba8565b505050565b6000336104548582856107e1565b61045f858585610873565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906103a790829086906104a4908790610be0565b61056f565b6104b6620d2f0042610bf8565b600855565b60606004805461031690610b6d565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105545760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61045f828686840361056f565b6000336103a7818585610873565b6001600160a01b0383166105d15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161054b565b6001600160a01b0382166106325760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161054b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0382166106f35760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161054b565b6001600160a01b038216600090815260208190526040902054818110156107675760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161054b565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610796908490610bf8565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461086d57818110156108605760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161054b565b61086d848484840361056f565b50505050565b6001600160a01b0383166108d75760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161054b565b6001600160a01b0382166109395760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161054b565b6001600160a01b038316600090815260208190526040902054818110156109b15760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161054b565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906109e8908490610be0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a3491815260200190565b60405180910390a361086d565b600060208083528351808285015260005b81811015610a6e57858101830151858201604001528201610a52565b81811115610a80576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610aad57600080fd5b919050565b600060208284031215610ac457600080fd5b610acd82610a96565b9392505050565b60008060408385031215610ae757600080fd5b610af083610a96565b946020939093013593505050565b600080600060608486031215610b1357600080fd5b610b1c84610a96565b9250610b2a60208501610a96565b9150604084013590509250925092565b60008060408385031215610b4d57600080fd5b610b5683610a96565b9150610b6460208401610a96565b90509250929050565b600181811c90821680610b8157607f821691505b60208210811415610ba257634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610bba57600080fd5b81518015158114610acd57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610bf357610bf3610bca565b500190565b600082821015610c0a57610c0a610bca565b50039056fea2646970667358221220014fc558db512b9ffa2c3a6594151199e09c4a0495208ddc2ee58298f1cf0fa464736f6c63430008090033";

type StakedAaveMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakedAaveMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakedAaveMock__factory extends ContractFactory {
  constructor(...args: StakedAaveMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "StakedAaveMock";
  }

  deploy(
    _aaveMock: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakedAaveMock> {
    return super.deploy(_aaveMock, overrides || {}) as Promise<StakedAaveMock>;
  }
  getDeployTransaction(
    _aaveMock: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_aaveMock, overrides || {});
  }
  attach(address: string): StakedAaveMock {
    return super.attach(address) as StakedAaveMock;
  }
  connect(signer: Signer): StakedAaveMock__factory {
    return super.connect(signer) as StakedAaveMock__factory;
  }
  static readonly contractName: "StakedAaveMock";
  public readonly contractName: "StakedAaveMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakedAaveMockInterface {
    return new utils.Interface(_abi) as StakedAaveMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakedAaveMock {
    return new Contract(address, _abi, signerOrProvider) as StakedAaveMock;
  }
}
