/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AaveLendingPoolProviderMock,
  AaveLendingPoolProviderMockInterface,
} from "../AaveLendingPoolProviderMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    name: "_setLendingPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_core",
        type: "address",
      },
    ],
    name: "_setLendingPoolCore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "core",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLendingPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLendingPoolCore",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061018f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630261bf8b1461006757806316f0115b1461009057806317c0eb70146100a357806395294621146100d5578063ed6ff76014610105578063f2f4eb2614610116575b600080fd5b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b600054610074906001600160a01b031681565b6100d36100b1366004610129565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b005b6100d36100e3366004610129565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316610074565b600154610074906001600160a01b031681565b60006020828403121561013b57600080fd5b81356001600160a01b038116811461015257600080fd5b939250505056fea26469706673582212206deb5ef365fed56e6d53848f32e696a3c2540c424b3a4a2f03e00c6782c8faec64736f6c63430008090033";

type AaveLendingPoolProviderMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AaveLendingPoolProviderMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AaveLendingPoolProviderMock__factory extends ContractFactory {
  constructor(...args: AaveLendingPoolProviderMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AaveLendingPoolProviderMock";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AaveLendingPoolProviderMock> {
    return super.deploy(
      overrides || {}
    ) as Promise<AaveLendingPoolProviderMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AaveLendingPoolProviderMock {
    return super.attach(address) as AaveLendingPoolProviderMock;
  }
  connect(signer: Signer): AaveLendingPoolProviderMock__factory {
    return super.connect(signer) as AaveLendingPoolProviderMock__factory;
  }
  static readonly contractName: "AaveLendingPoolProviderMock";
  public readonly contractName: "AaveLendingPoolProviderMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AaveLendingPoolProviderMockInterface {
    return new utils.Interface(_abi) as AaveLendingPoolProviderMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AaveLendingPoolProviderMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AaveLendingPoolProviderMock;
  }
}
