/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AaveLendingPoolCoreMock,
  AaveLendingPoolCoreMockInterface,
} from "../AaveLendingPoolCoreMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_reserve",
        type: "address",
      },
    ],
    name: "_setReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "apr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "borrowsStable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "borrowsVariable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getReserveAvailableLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getReserveCurrentAverageStableBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getReserveCurrentLiquidityRate",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidityRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getReserveInterestRateStrategyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getReserveTotalBorrowsStable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getReserveTotalBorrowsVariable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newVal",
        type: "uint256",
      },
    ],
    name: "setReserveAvailableLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newVal",
        type: "uint256",
      },
    ],
    name: "setReserveCurrentAverageStableBorrowRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newVal",
        type: "uint256",
      },
    ],
    name: "setReserveCurrentLiquidityRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newVal",
        type: "uint256",
      },
    ],
    name: "setReserveTotalBorrowsStable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newVal",
        type: "uint256",
      },
    ],
    name: "setReserveTotalBorrowsVariable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stableBorrowRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061031d806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80637f90fec5116100a2578063c540148e11610071578063c540148e1461023b578063cd3293de14610250578063e210ea4a14610263578063e240301914610276578063e811a23d1461028b57600080fd5b80637f90fec5146101eb57806398bd473714610200578063ac41143214610215578063bfc5ac0b1461022857600080fd5b806334b16e5a116100e957806334b16e5a1461017b57806346bc0f281461018457806357ded9c9146101995780636ae14416146101a2578063721b4e01146101d857600080fd5b8063065398ca1461011b5780630ae8e7ae146101375780631a686502146101695780633419558a14610172575b600080fd5b61012460045481565b6040519081526020015b60405180910390f35b61016761014536600461029e565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b005b61012460015481565b61012460035481565b61012460025481565b61012461019236600461029e565b5060045490565b61012460055481565b6101c06101b036600461029e565b506000546001600160a01b031690565b6040516001600160a01b03909116815260200161012e565b6101676101e63660046102ce565b600155565b6101246101f936600461029e565b5060025490565b61012461020e36600461029e565b5060035490565b6101676102233660046102ce565b600455565b6101676102363660046102ce565b600255565b61012461024936600461029e565b5060055490565b6000546101c0906001600160a01b031681565b6101676102713660046102ce565b600555565b61012461028436600461029e565b5060015490565b6101676102993660046102ce565b600355565b6000602082840312156102b057600080fd5b81356001600160a01b03811681146102c757600080fd5b9392505050565b6000602082840312156102e057600080fd5b503591905056fea2646970667358221220c788a14ee52a4c72c15cfdeae143c449872f6581a36d57256746b59b61bc166a64736f6c63430008090033";

type AaveLendingPoolCoreMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AaveLendingPoolCoreMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AaveLendingPoolCoreMock__factory extends ContractFactory {
  constructor(...args: AaveLendingPoolCoreMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AaveLendingPoolCoreMock";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AaveLendingPoolCoreMock> {
    return super.deploy(overrides || {}) as Promise<AaveLendingPoolCoreMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AaveLendingPoolCoreMock {
    return super.attach(address) as AaveLendingPoolCoreMock;
  }
  connect(signer: Signer): AaveLendingPoolCoreMock__factory {
    return super.connect(signer) as AaveLendingPoolCoreMock__factory;
  }
  static readonly contractName: "AaveLendingPoolCoreMock";
  public readonly contractName: "AaveLendingPoolCoreMock";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AaveLendingPoolCoreMockInterface {
    return new utils.Interface(_abi) as AaveLendingPoolCoreMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AaveLendingPoolCoreMock {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AaveLendingPoolCoreMock;
  }
}
