/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestERC20, TestERC20Interface } from "../TestERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToMint",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161080a38038061080a83398101604081905261002f916100cc565b610039338261003f565b5061010b565b6001600160a01b0382166000908152602081905260408120546100639083906100e5565b9050818110156100ac5760405162461bcd60e51b815260206004820152601060248201526f6f766572666c6f772062616c616e636560801b604482015260640160405180910390fd5b6001600160a01b0390921660009081526020819052604090209190915550565b6000602082840312156100de57600080fd5b5051919050565b6000821982111561010657634e487b7160e01b600052601160045260246000fd5b500190565b6106f08061011a6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806370a082311161005b57806370a08231146100ee578063a9059cbb14610117578063dd62ed3e1461012a578063e3d670d71461015557600080fd5b8063095ea7b31461008d57806323b872dd146100b5578063313ce567146100c857806340c10f19146100d9575b600080fd5b6100a061009b3660046105ba565b610175565b60405190151581526020015b60405180910390f35b6100a06100c33660046105e4565b6101e1565b60125b6040519081526020016100ac565b6100ec6100e73660046105ba565b6103d3565b005b6100cb6100fc366004610620565b6001600160a01b031660009081526020819052604090205490565b6100a06101253660046105ba565b61045c565b6100cb610138366004610642565b600160209081526000928352604080842090915290825290205481565b6100cb610163366004610620565b60006020819052908152604090205481565b3360008181526001602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906101d09086815260200190565b60405180910390a350600192915050565b6001600160a01b0383166000908152600160209081526040808320338452909152812054828110156102535760405162461bcd60e51b8152602060048201526016602482015275185b1b1bddd85b98d9481a5b9cdd59999a58da595b9d60521b60448201526064015b60405180910390fd5b61025d838261068b565b6001600160a01b03808716600090815260016020908152604080832033845282528083209490945591871681529081905220548061029b85826106a2565b10156102e95760405162461bcd60e51b815260206004820152601a60248201527f6f766572666c6f772062616c616e636520726563697069656e74000000000000604482015260640161024a565b6102f384826106a2565b6001600160a01b038087166000908152602081905260408082209390935590881681522054848110156103685760405162461bcd60e51b815260206004820152601860248201527f756e646572666c6f772062616c616e63652073656e6465720000000000000000604482015260640161024a565b610372858261068b565b6001600160a01b038881166000818152602081815260409182902094909455518881529189169290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35060019695505050505050565b6001600160a01b0382166000908152602081905260408120546103f79083906106a2565b90508181101561043c5760405162461bcd60e51b815260206004820152601060248201526f6f766572666c6f772062616c616e636560801b604482015260640161024a565b6001600160a01b0390921660009081526020819052604090209190915550565b33600090815260208190526040812054828110156104b35760405162461bcd60e51b8152602060048201526014602482015273696e73756666696369656e742062616c616e636560601b604482015260640161024a565b6104bd838261068b565b33600090815260208190526040808220929092556001600160a01b03861681522054806104ea85826106a2565b10156105385760405162461bcd60e51b815260206004820152601a60248201527f726563697069656e742062616c616e6365206f766572666c6f77000000000000604482015260640161024a565b61054284826106a2565b6001600160a01b038616600081815260208181526040918290209390935551868152909133917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3506001949350505050565b80356001600160a01b03811681146105b557600080fd5b919050565b600080604083850312156105cd57600080fd5b6105d68361059e565b946020939093013593505050565b6000806000606084860312156105f957600080fd5b6106028461059e565b92506106106020850161059e565b9150604084013590509250925092565b60006020828403121561063257600080fd5b61063b8261059e565b9392505050565b6000806040838503121561065557600080fd5b61065e8361059e565b915061066c6020840161059e565b90509250929050565b634e487b7160e01b600052601160045260246000fd5b60008282101561069d5761069d610675565b500390565b600082198211156106b5576106b5610675565b50019056fea26469706673582212205a75267943a4a5f42e73297fa2fc9d75ece5a5e97e00554d7d1cf64de9acf34c64736f6c63430008090033";

type TestERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC20__factory extends ContractFactory {
  constructor(...args: TestERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TestERC20";
  }

  deploy(
    amountToMint: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestERC20> {
    return super.deploy(amountToMint, overrides || {}) as Promise<TestERC20>;
  }
  getDeployTransaction(
    amountToMint: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(amountToMint, overrides || {});
  }
  attach(address: string): TestERC20 {
    return super.attach(address) as TestERC20;
  }
  connect(signer: Signer): TestERC20__factory {
    return super.connect(signer) as TestERC20__factory;
  }
  static readonly contractName: "TestERC20";
  public readonly contractName: "TestERC20";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC20Interface {
    return new utils.Interface(_abi) as TestERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestERC20 {
    return new Contract(address, _abi, signerOrProvider) as TestERC20;
  }
}
