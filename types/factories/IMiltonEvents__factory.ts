/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IMiltonEvents, IMiltonEventsInterface } from "../IMiltonEvents";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "swapId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "closeTimestamp",
        type: "uint256",
      },
    ],
    name: "CloseSwap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "swapId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum DataTypes.SwapDirection",
        name: "direction",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateral",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "liquidationDepositAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "notionalAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startingTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endingTimestamp",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "iporIndexValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtQuantity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fixedInterestRate",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct DataTypes.IporSwapIndicator",
        name: "indicator",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "openingAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "iporPublicationAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "spreadValue",
        type: "uint256",
      },
    ],
    name: "OpenSwap",
    type: "event",
  },
];

export class IMiltonEvents__factory {
  static readonly abi = _abi;
  static createInterface(): IMiltonEventsInterface {
    return new utils.Interface(_abi) as IMiltonEventsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMiltonEvents {
    return new Contract(address, _abi, signerOrProvider) as IMiltonEvents;
  }
}
