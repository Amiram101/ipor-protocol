/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MiltonDevToolDataProvider,
  MiltonDevToolDataProviderInterface,
} from "../MiltonDevToolDataProvider";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "appointedOwner",
        type: "address",
      },
    ],
    name: "AppointedToTransferOwnership",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "calculateSpread",
    outputs: [
      {
        internalType: "uint256",
        name: "spreadPayFixedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "spreadRecFixedValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmTransferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getMyAllowanceInJoseph",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getMyAllowanceInMilton",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getMyIpTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getMySwapsPayFixed",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "state",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "idsIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationDepositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "notionalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fixedInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtQuantity",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.IporSwapMemory[]",
        name: "items",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getMySwapsReceiveFixed",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "state",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "idsIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationDepositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "notionalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fixedInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtQuantity",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.IporSwapMemory[]",
        name: "items",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getMyTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getSwapsPayFixed",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "state",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "idsIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationDepositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "notionalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fixedInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtQuantity",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.IporSwapMemory[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getSwapsReceiveFixed",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "state",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endingTimestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "idsIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "collateral",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationDepositAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "notionalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fixedInterestRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtQuantity",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.IporSwapMemory[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IIporConfiguration",
        name: "iporConfiguration",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "appointedOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051611d0561004c60003960008181610670015281816106b9015281816109f301528181610a330152610ac60152611d056000f3fe6080604052600436106100fe5760003560e01c806368def70d11610095578063a2a709f411610064578063a2a709f41461028a578063ad2363f8146102bf578063c4d66de8146102df578063cc29516a146102ff578063f2fde38b1461031457600080fd5b806368def70d1461020d578063715018a61461022d5780638da5cb5b146102425780638e177e0e1461026a57600080fd5b80633d84a755116100d15780633d84a755146101985780634624d38d146101c55780634f1ef286146101e557806352d1902d146101f857600080fd5b8063071ec02b146101035780630813e11f146101365780632bbfcfcc146101565780633659cfe614610176575b600080fd5b34801561010f57600080fd5b5061012361011e366004611736565b610334565b6040519081526020015b60405180910390f35b34801561014257600080fd5b50610123610151366004611736565b6104a7565b34801561016257600080fd5b50610123610171366004611736565b6104d8565b34801561018257600080fd5b50610196610191366004611736565b610665565b005b3480156101a457600080fd5b506101b86101b3366004611753565b61074e565b60405161012d919061178c565b3480156101d157600080fd5b506101b86101e0366004611753565b6108c3565b6101966101f33660046118b4565b6109e8565b34801561020457600080fd5b50610123610ab9565b34801561021957600080fd5b506101b8610228366004611736565b610b6c565b34801561023957600080fd5b50610196610cdf565b34801561024e57600080fd5b506033546040516001600160a01b03909116815260200161012d565b34801561027657600080fd5b50610123610285366004611736565b610d15565b34801561029657600080fd5b506102aa6102a5366004611736565b610de6565b6040805192835260208301919091520161012d565b3480156102cb57600080fd5b506101b86102da366004611736565b610f77565b3480156102eb57600080fd5b506101966102fa366004611736565b61109a565b34801561030b57600080fd5b50610196611176565b34801561032057600080fd5b5061019661032f366004611736565b6111d9565b60ca54604051634fa52efb60e11b81526001600160a01b0383811660048301526000928392911690639f4a5df69060240160206040518083038186803b15801561037d57600080fd5b505afa158015610391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b5919061196c565b6001600160a01b031663f64de4ed6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ed57600080fd5b505afa158015610401573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610425919061196c565b6040516370a0823160e01b81523360048201529091506001600160a01b038216906370a08231906024015b60206040518083038186803b15801561046857600080fd5b505afa15801561047c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a09190611989565b9392505050565b6040516370a0823160e01b815233600482015260009082906001600160a01b038216906370a0823190602401610450565b60ca54604051634fa52efb60e11b81526001600160a01b0380841660048301526000928492849290911690639f4a5df69060240160206040518083038186803b15801561052457600080fd5b505afa158015610538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055c919061196c565b9050816001600160a01b031663dd62ed3e33836001600160a01b0316631f8338f26040518163ffffffff1660e01b815260040160206040518083038186803b1580156105a757600080fd5b505afa1580156105bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105df919061196c565b6040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260440160206040518083038186803b15801561062557600080fd5b505afa158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d9190611989565b949350505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156106b75760405162461bcd60e51b81526004016106ae906119a2565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610700600080516020611c89833981519152546001600160a01b031690565b6001600160a01b0316146107265760405162461bcd60e51b81526004016106ae906119ee565b61072f81611293565b6040805160008082526020820190925261074b918391906112bd565b50565b60ca54604051634fa52efb60e11b81526001600160a01b038481166004830152606092600092911690639f4a5df69060240160206040518083038186803b15801561079857600080fd5b505afa1580156107ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d0919061196c565b9050806001600160a01b03166367ae2f596040518163ffffffff1660e01b815260040160206040518083038186803b15801561080b57600080fd5b505afa15801561081f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610843919061196c565b604051634a49903760e01b81526001600160a01b0385811660048301529190911690634a499037906024015b60006040518083038186803b15801561088757600080fd5b505afa15801561089b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261065d9190810190611a3a565b60ca54604051634fa52efb60e11b81526001600160a01b038481166004830152606092600092911690639f4a5df69060240160206040518083038186803b15801561090d57600080fd5b505afa158015610921573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610945919061196c565b9050806001600160a01b03166367ae2f596040518163ffffffff1660e01b815260040160206040518083038186803b15801561098057600080fd5b505afa158015610994573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b8919061196c565b60405163885cad3160e01b81526001600160a01b038581166004830152919091169063885cad319060240161086f565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610a315760405162461bcd60e51b81526004016106ae906119a2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a7a600080516020611c89833981519152546001600160a01b031690565b6001600160a01b031614610aa05760405162461bcd60e51b81526004016106ae906119ee565b610aa982611293565b610ab5828260016112bd565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b595760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016106ae565b50600080516020611c8983398151915290565b60ca54604051634fa52efb60e11b81526001600160a01b038381166004830152606092600092911690639f4a5df69060240160206040518083038186803b158015610bb657600080fd5b505afa158015610bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bee919061196c565b9050806001600160a01b03166367ae2f596040518163ffffffff1660e01b815260040160206040518083038186803b158015610c2957600080fd5b505afa158015610c3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c61919061196c565b604051634a49903760e01b81523360048201526001600160a01b039190911690634a499037906024015b60006040518083038186803b158015610ca357600080fd5b505afa158015610cb7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104a09190810190611a3a565b6033546001600160a01b03163314610d095760405162461bcd60e51b81526004016106ae90611b69565b610d13600061143c565b565b60ca54604051634fa52efb60e11b81526001600160a01b0383811660048301526000928392911690639f4a5df69060240160206040518083038186803b158015610d5e57600080fd5b505afa158015610d72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d96919061196c565b90506000839050806001600160a01b031663dd62ed3e33846001600160a01b031663c5beac4d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105a757600080fd5b60ca54604051634fa52efb60e11b81526001600160a01b0383811660048301526000928392839290911690639f4a5df69060240160206040518083038186803b158015610e3257600080fd5b505afa158015610e46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e6a919061196c565b90506000816001600160a01b031663c5beac4d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ea757600080fd5b505afa158015610ebb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610edf919061196c565b9050806001600160a01b031663aff7079d6040518163ffffffff1660e01b8152600401604080518083038186803b158015610f1957600080fd5b505afa925050508015610f49575060408051601f3d908101601f19168201909252610f4691810190611b9e565b60015b610f6a57683635c9adc5de9fffff9350683635c9adc5de9fffff9250610f70565b90945092505b5050915091565b60ca54604051634fa52efb60e11b81526001600160a01b038381166004830152606092600092911690639f4a5df69060240160206040518083038186803b158015610fc157600080fd5b505afa158015610fd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff9919061196c565b9050806001600160a01b03166367ae2f596040518163ffffffff1660e01b815260040160206040518083038186803b15801561103457600080fd5b505afa158015611048573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106c919061196c565b60405163885cad3160e01b81523360048201526001600160a01b03919091169063885cad3190602401610c8b565b600054610100900460ff166110b55760005460ff16156110b9565b303b155b61111c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016106ae565b600054610100900460ff1615801561113e576000805461ffff19166101011790555b61114661148e565b60ca80546001600160a01b0319166001600160a01b0384161790558015610ab5576000805461ff00191690555050565b60655460408051808201909152600681526524a827a92f9b60d11b6020820152906001600160a01b031633146111bf5760405162461bcd60e51b81526004016106ae9190611bee565b50606580546001600160a01b0319169055610d133361143c565b6033546001600160a01b031633146112035760405162461bcd60e51b81526004016106ae90611b69565b60408051808201909152600781526649504f525f333760c81b60208201526001600160a01b0382166112485760405162461bcd60e51b81526004016106ae9190611bee565b50606580546001600160a01b0319166001600160a01b0383169081179091556040517f3ec7bb1d452f3c36260fa8ef678a597fd97574d8ec42f6dc98ffce3dbc91228f90600090a250565b6033546001600160a01b0316331461074b5760405162461bcd60e51b81526004016106ae90611b69565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156112f5576112f0836114bd565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561132e57600080fd5b505afa92505050801561135e575060408051601f3d908101601f1916820190925261135b91810190611989565b60015b6113c15760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016106ae565b600080516020611c8983398151915281146114305760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016106ae565b506112f0838383611559565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166114b55760405162461bcd60e51b81526004016106ae90611c21565b610d13611584565b6001600160a01b0381163b61152a5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016106ae565b600080516020611c8983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b611562836115b4565b60008251118061156f5750805b156112f05761157e83836115f4565b50505050565b600054610100900460ff166115ab5760405162461bcd60e51b81526004016106ae90611c21565b610d133361143c565b6115bd816114bd565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b61165c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016106ae565b600080846001600160a01b0316846040516116779190611c6c565b600060405180830381855af49150503d80600081146116b2576040519150601f19603f3d011682016040523d82523d6000602084013e6116b7565b606091505b50915091506116df8282604051806060016040528060278152602001611ca9602791396116e8565b95945050505050565b606083156116f75750816104a0565b8251156117075782518084602001fd5b8160405162461bcd60e51b81526004016106ae9190611bee565b6001600160a01b038116811461074b57600080fd5b60006020828403121561174857600080fd5b81356104a081611721565b6000806040838503121561176657600080fd5b823561177181611721565b9150602083013561178181611721565b809150509250929050565b602080825282518282018190526000919060409081850190868401855b8281101561183657815180518552868101516001600160a01b0316878601528581015186860152606080820151908601526080808201519086015260a0808201519086015260c0808201519086015260e0808201519086015261010080820151908601526101208082015190860152610140908101519085015261016090930192908501906001016117a9565b5091979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051610160810167ffffffffffffffff8111828210171561187d5761187d611843565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156118ac576118ac611843565b604052919050565b600080604083850312156118c757600080fd5b82356118d281611721565b915060208381013567ffffffffffffffff808211156118f057600080fd5b818601915086601f83011261190457600080fd5b81358181111561191657611916611843565b611928601f8201601f19168501611883565b9150808252878482850101111561193e57600080fd5b80848401858401376000848284010152508093505050509250929050565b805161196781611721565b919050565b60006020828403121561197e57600080fd5b81516104a081611721565b60006020828403121561199b57600080fd5b5051919050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006020808385031215611a4d57600080fd5b825167ffffffffffffffff80821115611a6557600080fd5b818501915085601f830112611a7957600080fd5b815181811115611a8b57611a8b611843565b611a99848260051b01611883565b8181528481019250610160918202840185019188831115611ab957600080fd5b938501935b82851015611b5d5780858a031215611ad65760008081fd5b611ade611859565b85518152611aed87870161195c565b8188015260408681015190820152606080870151908201526080808701519082015260a0808701519082015260c0808701519082015260e0808701519082015261010080870151908201526101208087015190820152610140808701519082015284529384019392850192611abe565b50979650505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008060408385031215611bb157600080fd5b505080516020909101519092909150565b60005b83811015611bdd578181015183820152602001611bc5565b8381111561157e5750506000910152565b6020815260008251806020840152611c0d816040850160208701611bc2565b601f01601f19169190910160400192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251611c7e818460208701611bc2565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122080f1021c472fcd48c5e96db570340c056f8b41ce526dd2ec24105488161cfb3364736f6c63430008090033";

type MiltonDevToolDataProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MiltonDevToolDataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MiltonDevToolDataProvider__factory extends ContractFactory {
  constructor(...args: MiltonDevToolDataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MiltonDevToolDataProvider";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MiltonDevToolDataProvider> {
    return super.deploy(overrides || {}) as Promise<MiltonDevToolDataProvider>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MiltonDevToolDataProvider {
    return super.attach(address) as MiltonDevToolDataProvider;
  }
  connect(signer: Signer): MiltonDevToolDataProvider__factory {
    return super.connect(signer) as MiltonDevToolDataProvider__factory;
  }
  static readonly contractName: "MiltonDevToolDataProvider";
  public readonly contractName: "MiltonDevToolDataProvider";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MiltonDevToolDataProviderInterface {
    return new utils.Interface(_abi) as MiltonDevToolDataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MiltonDevToolDataProvider {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MiltonDevToolDataProvider;
  }
}
