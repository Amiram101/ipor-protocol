/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockCase2IporVault,
  MockCase2IporVaultInterface,
} from "../MockCase2IporVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetValue",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetValue",
        type: "uint256",
      },
    ],
    name: "testDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "totalBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetValue",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "withdrawnValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161078138038061078183398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6106ee806100936000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632e1a7d4d14610051578063404cea9c1461007e5780636eacd3981461009f578063b6b55f25146100c8575b600080fd5b61006461005f366004610520565b6100db565b604080519283526020830191909152015b60405180910390f35b61009161008c366004610550565b610157565b604051908152602001610075565b6100916100ad36600461057a565b6001600160a01b031660009081526001602052604090205490565b6100916100d6366004610520565b6101ae565b600080806101026100f4670b1a2bc2ec500000866105ab565b670de0b6b3a76400006101f9565b336000908152600160205260409020549091506101209082906105ca565b336000818152600160205260408120839055549294509092508391610151916001600160a01b039091169083610222565b50915091565b6001600160a01b03821660009081526001602052604081205461017b9083906105e1565b6001600160a01b038085166000908152600160205260408120839055549192506101a8911633308561028a565b92915050565b336000908152600160205260408120546101c99083906105e1565b336000818152600160205260408120839055549192506101f4916001600160a01b031690308561028a565b919050565b6000816102076002826105f9565b61021190856105e1565b61021b91906105f9565b9392505050565b6040516001600160a01b03831660248201526044810182905261028590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526102c8565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526102c29085906323b872dd60e01b9060840161024e565b50505050565b600061031d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661039f9092919063ffffffff16565b805190915015610285578080602001905181019061033b919061061b565b6102855760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b60606103ae84846000856103b6565b949350505050565b6060824710156104175760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610396565b6001600160a01b0385163b61046e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610396565b600080866001600160a01b0316858760405161048a9190610669565b60006040518083038185875af1925050503d80600081146104c7576040519150601f19603f3d011682016040523d82523d6000602084013e6104cc565b606091505b50915091506104dc8282866104e7565b979650505050505050565b606083156104f657508161021b565b8251156105065782518084602001fd5b8160405162461bcd60e51b81526004016103969190610685565b60006020828403121561053257600080fd5b5035919050565b80356001600160a01b03811681146101f457600080fd5b6000806040838503121561056357600080fd5b61056c83610539565b946020939093013593505050565b60006020828403121561058c57600080fd5b61021b82610539565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156105c5576105c5610595565b500290565b6000828210156105dc576105dc610595565b500390565b600082198211156105f4576105f4610595565b500190565b60008261061657634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561062d57600080fd5b8151801515811461021b57600080fd5b60005b83811015610658578181015183820152602001610640565b838111156102c25750506000910152565b6000825161067b81846020870161063d565b9190910192915050565b60208152600082518060208401526106a481604085016020870161063d565b601f01601f1916919091016040019291505056fea26469706673582212207b73712f89d9aa0e9b39f02ef2635ac16511f4e0d3a505cd3963f9df4d64b53f64736f6c63430008090033";

type MockCase2IporVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockCase2IporVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCase2IporVault__factory extends ContractFactory {
  constructor(...args: MockCase2IporVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockCase2IporVault";
  }

  deploy(
    asset: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockCase2IporVault> {
    return super.deploy(asset, overrides || {}) as Promise<MockCase2IporVault>;
  }
  getDeployTransaction(
    asset: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(asset, overrides || {});
  }
  attach(address: string): MockCase2IporVault {
    return super.attach(address) as MockCase2IporVault;
  }
  connect(signer: Signer): MockCase2IporVault__factory {
    return super.connect(signer) as MockCase2IporVault__factory;
  }
  static readonly contractName: "MockCase2IporVault";
  public readonly contractName: "MockCase2IporVault";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockCase2IporVaultInterface {
    return new utils.Interface(_abi) as MockCase2IporVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockCase2IporVault {
    return new Contract(address, _abi, signerOrProvider) as MockCase2IporVault;
  }
}
