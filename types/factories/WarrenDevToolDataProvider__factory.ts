/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WarrenDevToolDataProvider,
  WarrenDevToolDataProviderInterface,
} from "../WarrenDevToolDataProvider";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "appointedOwner",
        type: "address",
      },
    ],
    name: "AppointedToTransferOwnership",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "confirmTransferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getIndexes",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "asset",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "indexValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exponentialMovingAverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exponentialWeightedMovingVariance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "blockTimestamp",
            type: "uint256",
          },
        ],
        internalType: "struct IWarrenDevToolDataProvider.IporFront[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "warren",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetDai",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetUsdt",
        type: "address",
      },
      {
        internalType: "address",
        name: "assetUsdc",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "appointedOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516112a661004c600039600081816102b3015281816102fc0152818161039c015281816103dc015261046f01526112a66000f3fe6080604052600436106100865760003560e01c8063715018a611610059578063715018a61461010e5780638da5cb5b14610123578063cc29516a1461014b578063f2fde38b14610160578063f8c8765e1461018057600080fd5b80631d8022471461008b5780633659cfe6146100b65780634f1ef286146100d857806352d1902d146100eb575b600080fd5b34801561009757600080fd5b506100a06101a0565b6040516100ad9190610ddb565b60405180910390f35b3480156100c257600080fd5b506100d66100d1366004610e96565b6102a8565b005b6100d66100e6366004610f20565b610391565b3480156100f757600080fd5b50610100610462565b6040519081526020016100ad565b34801561011a57600080fd5b506100d6610515565b34801561012f57600080fd5b506033546040516001600160a01b0390911681526020016100ad565b34801561015757600080fd5b506100d661054b565b34801561016c57600080fd5b506100d661017b366004610e96565b6105ae565b34801561018c57600080fd5b506100d661019b366004610fb1565b610668565b6040805160038082526080820190925260609160009190816020015b6101f56040518060c001604052806060815260200160008152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816101bc57505060cb5490915061021f906001600160a01b0316610777565b8160008151811061023257610232611005565b602090810291909101015260cd54610252906001600160a01b0316610777565b8160018151811061026557610265611005565b602090810291909101015260cc54610285906001600160a01b0316610777565b8160028151811061029857610298611005565b6020908102919091010152919050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156102fa5760405162461bcd60e51b81526004016102f19061101b565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661034360008051602061122a833981519152546001600160a01b031690565b6001600160a01b0316146103695760405162461bcd60e51b81526004016102f190611067565b610372816108ee565b6040805160008082526020820190925261038e91839190610918565b50565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156103da5760405162461bcd60e51b81526004016102f19061101b565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661042360008051602061122a833981519152546001600160a01b031690565b6001600160a01b0316146104495760405162461bcd60e51b81526004016102f190611067565b610452826108ee565b61045e82826001610918565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105025760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016102f1565b5060008051602061122a83398151915290565b6033546001600160a01b0316331461053f5760405162461bcd60e51b81526004016102f1906110b3565b6105496000610a97565b565b60655460408051808201909152600681526524a827a92f9b60d11b6020820152906001600160a01b031633146105945760405162461bcd60e51b81526004016102f191906110e8565b50606580546001600160a01b031916905561054933610a97565b6033546001600160a01b031633146105d85760405162461bcd60e51b81526004016102f1906110b3565b60408051808201909152600781526649504f525f333760c81b60208201526001600160a01b03821661061d5760405162461bcd60e51b81526004016102f191906110e8565b50606580546001600160a01b0319166001600160a01b0383169081179091556040517f3ec7bb1d452f3c36260fa8ef678a597fd97574d8ec42f6dc98ffce3dbc91228f90600090a250565b600054610100900460ff166106835760005460ff1615610687565b303b155b6106ea5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102f1565b600054610100900460ff1615801561070c576000805461ffff19166101011790555b610714610ae9565b60ca80546001600160a01b038088166001600160a01b03199283161790925560cb805487841690831617905560cc805485841690831617905560cd8054928616929091169190911790558015610770576000805461ff00191690555b5050505050565b6107b06040518060c001604052806060815260200160008152602001600081526020016000815260200160008152602001600081525090565b60ca5460405163b31610db60e01b81526001600160a01b038481166004830152600092839283928392839291169063b31610db9060240160a06040518083038186803b1580156107ff57600080fd5b505afa158015610813573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083791906110fb565b945094509450945094506040518060c00160405280886001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561088557600080fd5b505afa158015610899573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108c1919081019061113b565b81526020018681526020018581526020018481526020018381526020018281525095505050505050919050565b6033546001600160a01b0316331461038e5760405162461bcd60e51b81526004016102f1906110b3565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156109505761094b83610b18565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561098957600080fd5b505afa9250505080156109b9575060408051601f3d908101601f191682019092526109b6918101906111a9565b60015b610a1c5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016102f1565b60008051602061122a8339815191528114610a8b5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016102f1565b5061094b838383610bb4565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610b105760405162461bcd60e51b81526004016102f1906111c2565b610549610bdf565b6001600160a01b0381163b610b855760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016102f1565b60008051602061122a83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610bbd83610c0f565b600082511180610bca5750805b1561094b57610bd98383610c4f565b50505050565b600054610100900460ff16610c065760405162461bcd60e51b81526004016102f1906111c2565b61054933610a97565b610c1881610b18565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b610cb75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016102f1565b600080846001600160a01b031684604051610cd2919061120d565b600060405180830381855af49150503d8060008114610d0d576040519150601f19603f3d011682016040523d82523d6000602084013e610d12565b606091505b5091509150610d3a828260405180606001604052806027815260200161124a60279139610d43565b95945050505050565b60608315610d52575081610d7c565b825115610d625782518084602001fd5b8160405162461bcd60e51b81526004016102f191906110e8565b9392505050565b60005b83811015610d9e578181015183820152602001610d86565b83811115610bd95750506000910152565b60008151808452610dc7816020860160208601610d83565b601f01601f19169290920160200192915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610e6c57603f19898403018552815160c08151818652610e2882870182610daf565b838b0151878c0152898401518a880152606080850151908801526080808501519088015260a093840151939096019290925250509386019390860190600101610e02565b509098975050505050505050565b80356001600160a01b0381168114610e9157600080fd5b919050565b600060208284031215610ea857600080fd5b610d7c82610e7a565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610ef057610ef0610eb1565b604052919050565b600067ffffffffffffffff821115610f1257610f12610eb1565b50601f01601f191660200190565b60008060408385031215610f3357600080fd5b610f3c83610e7a565b9150602083013567ffffffffffffffff811115610f5857600080fd5b8301601f81018513610f6957600080fd5b8035610f7c610f7782610ef8565b610ec7565b818152866020838501011115610f9157600080fd5b816020840160208301376000602083830101528093505050509250929050565b60008060008060808587031215610fc757600080fd5b610fd085610e7a565b9350610fde60208601610e7a565b9250610fec60408601610e7a565b9150610ffa60608601610e7a565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b602081526000610d7c6020830184610daf565b600080600080600060a0868803121561111357600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b60006020828403121561114d57600080fd5b815167ffffffffffffffff81111561116457600080fd5b8201601f8101841361117557600080fd5b8051611183610f7782610ef8565b81815285602083850101111561119857600080fd5b610d3a826020830160208601610d83565b6000602082840312156111bb57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000825161121f818460208701610d83565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220f8f7b9e3c28abf88b5dd93d2252ff7b5de975a59ca780104273503b7ad478b9e64736f6c63430008090033";

type WarrenDevToolDataProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WarrenDevToolDataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WarrenDevToolDataProvider__factory extends ContractFactory {
  constructor(...args: WarrenDevToolDataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "WarrenDevToolDataProvider";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WarrenDevToolDataProvider> {
    return super.deploy(overrides || {}) as Promise<WarrenDevToolDataProvider>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WarrenDevToolDataProvider {
    return super.attach(address) as WarrenDevToolDataProvider;
  }
  connect(signer: Signer): WarrenDevToolDataProvider__factory {
    return super.connect(signer) as WarrenDevToolDataProvider__factory;
  }
  static readonly contractName: "WarrenDevToolDataProvider";
  public readonly contractName: "WarrenDevToolDataProvider";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WarrenDevToolDataProviderInterface {
    return new utils.Interface(_abi) as WarrenDevToolDataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WarrenDevToolDataProvider {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WarrenDevToolDataProvider;
  }
}
