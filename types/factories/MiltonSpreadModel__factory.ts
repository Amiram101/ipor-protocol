/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MiltonSpreadModel,
  MiltonSpreadModelInterface,
} from "../MiltonSpreadModel";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "appointedOwner",
        type: "address",
      },
    ],
    name: "AppointedToTransferOwnership",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "soap",
        type: "int256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "indexValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exponentialMovingAverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exponentialWeightedMovingVariance",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.AccruedIpor",
        name: "accruedIpor",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "payFixedSwaps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receiveFixedSwaps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vault",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.MiltonBalanceMemory",
        name: "accruedBalance",
        type: "tuple",
      },
    ],
    name: "calculateQuotePayFixed",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteValue",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "soap",
        type: "int256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "indexValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exponentialMovingAverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exponentialWeightedMovingVariance",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.AccruedIpor",
        name: "accruedIpor",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "payFixedSwaps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receiveFixedSwaps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vault",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.MiltonBalanceMemory",
        name: "accruedBalance",
        type: "tuple",
      },
    ],
    name: "calculateQuoteReceiveFixed",
    outputs: [
      {
        internalType: "uint256",
        name: "quoteValue",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "soap",
        type: "int256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "indexValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exponentialMovingAverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exponentialWeightedMovingVariance",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.AccruedIpor",
        name: "accruedIpor",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "payFixedSwaps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receiveFixedSwaps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vault",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.MiltonBalanceMemory",
        name: "accruedBalance",
        type: "tuple",
      },
    ],
    name: "calculateSpreadPayFixed",
    outputs: [
      {
        internalType: "uint256",
        name: "spreadValue",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "soap",
        type: "int256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "indexValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exponentialMovingAverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exponentialWeightedMovingVariance",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.AccruedIpor",
        name: "accruedIpor",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "payFixedSwaps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "receiveFixedSwaps",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidityPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vault",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.MiltonBalanceMemory",
        name: "accruedBalance",
        type: "tuple",
      },
    ],
    name: "calculateSpreadRecFixed",
    outputs: [
      {
        internalType: "uint256",
        name: "spreadValue",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmTransferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAtParComponentKHistValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getAtParComponentKVolValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getDCKOmegaValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getDCKfValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getDCLambdaValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getDCMaxLiquidityRedemptionValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getSpreadPremiumsMaxValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "appointedOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "";

type MiltonSpreadModelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MiltonSpreadModelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MiltonSpreadModel__factory extends ContractFactory {
  constructor(...args: MiltonSpreadModelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MiltonSpreadModel";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MiltonSpreadModel> {
    return super.deploy(overrides || {}) as Promise<MiltonSpreadModel>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MiltonSpreadModel {
    return super.attach(address) as MiltonSpreadModel;
  }
  connect(signer: Signer): MiltonSpreadModel__factory {
    return super.connect(signer) as MiltonSpreadModel__factory;
  }
  static readonly contractName: "MiltonSpreadModel";
  public readonly contractName: "MiltonSpreadModel";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MiltonSpreadModelInterface {
    return new utils.Interface(_abi) as MiltonSpreadModelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MiltonSpreadModel {
    return new Contract(address, _abi, signerOrProvider) as MiltonSpreadModel;
  }
}
