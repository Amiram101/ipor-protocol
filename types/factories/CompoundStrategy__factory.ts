/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CompoundStrategy,
  CompoundStrategyInterface,
} from "../CompoundStrategy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "appointedOwner",
        type: "address",
      },
    ],
    name: "AppointedToTransferOwnership",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "beforeClaim",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "blocksPerYear",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cToken",
    outputs: [
      {
        internalType: "contract CErc20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "changeOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "compToken",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "comptroller",
    outputs: [
      {
        internalType: "contract ComptrollerInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmTransferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
    ],
    name: "doClaim",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getApy",
    outputs: [
      {
        internalType: "uint256",
        name: "apr",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUnderlyingToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_underlyingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_cErc20Contract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_comptroller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_compToken",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blocksPerYear",
        type: "uint256",
      },
    ],
    name: "setBlocksPerYear",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shareToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "appointedOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051611f7561004c60003960008181610864015281816108a401528181610941015281816109810152610a140152611f756000f3fe6080604052600436106101405760003560e01c80636c9fa59e116100b6578063cb4f27311161006f578063cb4f27311461033e578063cc29516a14610351578063e5fa2b7014610366578063ee719bc814610386578063f2fde38b146103a4578063f8c8765e146103c457600080fd5b80636c9fa59e146102a2578063715018a6146102c0578063722713f7146102d55780638da5cb5b146102ea578063a385fb9614610308578063b6b55f251461031e57600080fd5b80633659cfe6116101085780633659cfe6146101fa5780634f1ef2861461021a57806352d1902d1461022d5780635fe3b567146102425780636605dfa71461026257806369e527da1461028257600080fd5b80631d5188c8146101455780631fb922e01461015a5780632495a599146101825780632af4c31e146101ba5780632e1a7d4d146101da575b600080fd5b6101586101533660046119ae565b6103e4565b005b34801561016657600080fd5b5061016f61056d565b6040519081526020015b60405180910390f35b34801561018e57600080fd5b5060cb546101a2906001600160a01b031681565b6040516001600160a01b039091168152602001610179565b3480156101c657600080fd5b506101586101d53660046119fc565b610617565b3480156101e657600080fd5b506101586101f5366004611a17565b610679565b34801561020657600080fd5b506101586102153660046119fc565b610859565b610158610228366004611a30565b610936565b34801561023957600080fd5b5061016f610a07565b34801561024e57600080fd5b5060cc546101a2906001600160a01b031681565b34801561026e57600080fd5b5060cd546101a2906001600160a01b031681565b34801561028e57600080fd5b5060ce546101a2906001600160a01b031681565b3480156102ae57600080fd5b5060ce546001600160a01b03166101a2565b3480156102cc57600080fd5b50610158610aba565b3480156102e157600080fd5b5061016f610af0565b3480156102f657600080fd5b506097546001600160a01b03166101a2565b34801561031457600080fd5b5061016f60ca5481565b34801561032a57600080fd5b50610158610339366004611a17565b610c98565b61015861034c366004611ad6565b610d58565b34801561035d57600080fd5b50610158610d82565b34801561037257600080fd5b50610158610381366004611a17565b610de5565b34801561039257600080fd5b5060cb546001600160a01b03166101a2565b3480156103b057600080fd5b506101586103bf3660046119fc565b610e67565b3480156103d057600080fd5b506101586103df366004611b1b565b610f21565b6097546001600160a01b031633146104175760405162461bcd60e51b815260040161040e90611b6f565b60405180910390fd5b60408051808201909152601781527649504f525f41535345545f4d414e41474d454e545f303560481b60208201526001600160a01b03831661046c5760405162461bcd60e51b815260040161040e9190611bd0565b5060cc5460405162e1ed9760e51b81526001600160a01b0390911690631c3db2e09061049e9030908590600401611c03565b600060405180830381600087803b1580156104b857600080fd5b505af11580156104cc573d6000803e3d6000fd5b505060cd546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a082319060240160206040518083038186803b15801561051657600080fd5b505afa15801561052a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054e9190611c5f565b60cd54909150610568906001600160a01b03168483611042565b505050565b60008060ce60009054906101000a90046001600160a01b03166001600160a01b031663ae9d70b06040518163ffffffff1660e01b815260040160206040518083038186803b1580156105be57600080fd5b505afa1580156105d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f69190611c5f565b905060ca54816106069190611c8e565b610611906064611c8e565b91505090565b60408051808201909152601781527649504f525f41535345545f4d414e41474d454e545f303560481b60208201526001600160a01b03821661066c5760405162461bcd60e51b815260040161040e9190611bd0565b5061067681610e67565b50565b6097546001600160a01b031633146106a35760405162461bcd60e51b815260040161040e90611b6f565b60ce546001600160a01b031663db006a756107546106c984670de0b6b3a7640000611c8e565b60ce60009054906101000a90046001600160a01b03166001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b15801561071757600080fd5b505afa15801561072b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074f9190611c5f565b6110a5565b6040518263ffffffff1660e01b815260040161077291815260200190565b602060405180830381600087803b15801561078c57600080fd5b505af11580156107a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c49190611c5f565b5060cb546040516370a0823160e01b81523060048201526106769133916001600160a01b03909116906370a082319060240160206040518083038186803b15801561080e57600080fd5b505afa158015610822573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108469190611c5f565b60cb546001600160a01b03169190611042565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156108a25760405162461bcd60e51b815260040161040e90611cad565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108eb600080516020611ef9833981519152546001600160a01b031690565b6001600160a01b0316146109115760405162461bcd60e51b815260040161040e90611cf9565b61091a816110ce565b60408051600080825260208201909252610676918391906110f8565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561097f5760405162461bcd60e51b815260040161040e90611cad565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166109c8600080516020611ef9833981519152546001600160a01b031690565b6001600160a01b0316146109ee5760405162461bcd60e51b815260040161040e90611cf9565b6109f7826110ce565b610a03828260016110f8565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610aa75760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161040e565b50600080516020611ef983398151915290565b6097546001600160a01b03163314610ae45760405162461bcd60e51b815260040161040e90611b6f565b610aee6000611272565b565b60ce546040516370a0823160e01b8152306004820152600091610c93916001600160a01b03909116906370a082319060240160206040518083038186803b158015610b3a57600080fd5b505afa158015610b4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b729190611c5f565b60ce60009054906101000a90046001600160a01b03166001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610bc057600080fd5b505afa158015610bd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf89190611c5f565b610c029190611c8e565b60cb60009054906101000a90046001600160a01b03166001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610c5057600080fd5b505afa158015610c64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c889190611c5f565b61074f90600a611e29565b905090565b6097546001600160a01b03163314610cc25760405162461bcd60e51b815260040161040e90611b6f565b60cb54610cda906001600160a01b03163330846112c4565b60ce5460405163140e25ad60e31b8152600481018390526001600160a01b039091169063a0712d6890602401602060405180830381600087803b158015610d2057600080fd5b505af1158015610d34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a039190611c5f565b6097546001600160a01b03163314610a035760405162461bcd60e51b815260040161040e90611b6f565b60c95460408051808201909152600681526524a827a92f9b60d11b6020820152906001600160a01b03163314610dcb5760405162461bcd60e51b815260040161040e9190611bd0565b5060c980546001600160a01b0319169055610aee33611272565b6097546001600160a01b03163314610e0f5760405162461bcd60e51b815260040161040e90611b6f565b60408051808201909152601781527f49504f525f41535345545f4d414e41474d454e545f3036000000000000000000602082015281610e615760405162461bcd60e51b815260040161040e9190611bd0565b5060ca55565b6097546001600160a01b03163314610e915760405162461bcd60e51b815260040161040e90611b6f565b60408051808201909152600781526649504f525f333760c81b60208201526001600160a01b038216610ed65760405162461bcd60e51b815260040161040e9190611bd0565b5060c980546001600160a01b0319166001600160a01b0383169081179091556040517f3ec7bb1d452f3c36260fa8ef678a597fd97574d8ec42f6dc98ffce3dbc91228f90600090a250565b600054610100900460ff16610f3c5760005460ff1615610f40565b303b155b610fa35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161040e565b600054610100900460ff16158015610fc5576000805461ffff19166101011790555b610fcd611302565b60cb80546001600160a01b038088166001600160a01b0319928316811790935560ce805488831690841617905560cc805487831690841617905560cd8054918616919092161790556110229085600019611331565b6220148060ca55801561103b576000805461ff00191690555b5050505050565b6040516001600160a01b03831660248201526044810182905261056890849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611455565b6000816110b3600282611e35565b6110bd9085611e57565b6110c79190611e35565b9392505050565b6097546001600160a01b031633146106765760405162461bcd60e51b815260040161040e90611b6f565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561112b5761056883611527565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561116457600080fd5b505afa925050508015611194575060408051601f3d908101601f1916820190925261119191810190611c5f565b60015b6111f75760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161040e565b600080516020611ef983398151915281146112665760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161040e565b506105688383836115c3565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516001600160a01b03808516602483015283166044820152606481018290526112fc9085906323b872dd60e01b9060840161106e565b50505050565b600054610100900460ff166113295760405162461bcd60e51b815260040161040e90611e6f565b610aee6115e8565b8015806113ba5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561138057600080fd5b505afa158015611394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b89190611c5f565b155b6114255760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161040e565b6040516001600160a01b03831660248201526044810182905261056890849063095ea7b360e01b9060640161106e565b60006114aa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166116189092919063ffffffff16565b80519091501561056857808060200190518101906114c89190611eba565b6105685760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161040e565b6001600160a01b0381163b6115945760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161040e565b600080516020611ef983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6115cc8361162f565b6000825111806115d95750805b15610568576112fc838361166f565b600054610100900460ff1661160f5760405162461bcd60e51b815260040161040e90611e6f565b610aee33611272565b60606116278484600085611765565b949350505050565b61163881611527565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6116d75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161040e565b600080846001600160a01b0316846040516116f29190611edc565b600060405180830381855af49150503d806000811461172d576040519150601f19603f3d011682016040523d82523d6000602084013e611732565b606091505b509150915061175a8282604051806060016040528060278152602001611f1960279139611896565b925050505b92915050565b6060824710156117c65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161040e565b6001600160a01b0385163b61181d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161040e565b600080866001600160a01b031685876040516118399190611edc565b60006040518083038185875af1925050503d8060008114611876576040519150601f19603f3d011682016040523d82523d6000602084013e61187b565b606091505b509150915061188b828286611896565b979650505050505050565b606083156118a55750816110c7565b8251156118b55782518084602001fd5b8160405162461bcd60e51b815260040161040e9190611bd0565b80356001600160a01b03811681146118e657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561192a5761192a6118eb565b604052919050565b600082601f83011261194357600080fd5b8135602067ffffffffffffffff82111561195f5761195f6118eb565b8160051b61196e828201611901565b928352848101820192828101908785111561198857600080fd5b83870192505b8483101561188b5761199f836118cf565b8252918301919083019061198e565b600080604083850312156119c157600080fd5b6119ca836118cf565b9150602083013567ffffffffffffffff8111156119e657600080fd5b6119f285828601611932565b9150509250929050565b600060208284031215611a0e57600080fd5b6110c7826118cf565b600060208284031215611a2957600080fd5b5035919050565b60008060408385031215611a4357600080fd5b611a4c836118cf565b915060208084013567ffffffffffffffff80821115611a6a57600080fd5b818601915086601f830112611a7e57600080fd5b813581811115611a9057611a906118eb565b611aa2601f8201601f19168501611901565b91508082528784828501011115611ab857600080fd5b80848401858401376000848284010152508093505050509250929050565b60008060408385031215611ae957600080fd5b823567ffffffffffffffff811115611b0057600080fd5b611b0c85828601611932565b95602094909401359450505050565b60008060008060808587031215611b3157600080fd5b611b3a856118cf565b9350611b48602086016118cf565b9250611b56604086016118cf565b9150611b64606086016118cf565b905092959194509250565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60005b83811015611bbf578181015183820152602001611ba7565b838111156112fc5750506000910152565b6020815260008251806020840152611bef816040850160208701611ba4565b601f01601f19169190910160400192915050565b6001600160a01b038381168252604060208084018290528451918401829052600092858201929091906060860190855b81811015611c51578551851683529483019491830191600101611c33565b509098975050505050505050565b600060208284031215611c7157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611ca857611ca8611c78565b500290565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600181815b80851115611d80578160001904821115611d6657611d66611c78565b80851615611d7357918102915b93841c9390800290611d4a565b509250929050565b600082611d975750600161175f565b81611da45750600061175f565b8160018114611dba5760028114611dc457611de0565b600191505061175f565b60ff841115611dd557611dd5611c78565b50506001821b61175f565b5060208310610133831016604e8410600b8410161715611e03575081810a61175f565b611e0d8383611d45565b8060001904821115611e2157611e21611c78565b029392505050565b60006110c78383611d88565b600082611e5257634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611e6a57611e6a611c78565b500190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600060208284031215611ecc57600080fd5b815180151581146110c757600080fd5b60008251611eee818460208701611ba4565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220b7a51a2bf21a86d809c53aabcf7dd68e5b299e190340a14761302614bb17882264736f6c63430008090033";

type CompoundStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CompoundStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CompoundStrategy__factory extends ContractFactory {
  constructor(...args: CompoundStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CompoundStrategy";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CompoundStrategy> {
    return super.deploy(overrides || {}) as Promise<CompoundStrategy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CompoundStrategy {
    return super.attach(address) as CompoundStrategy;
  }
  connect(signer: Signer): CompoundStrategy__factory {
    return super.connect(signer) as CompoundStrategy__factory;
  }
  static readonly contractName: "CompoundStrategy";
  public readonly contractName: "CompoundStrategy";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CompoundStrategyInterface {
    return new utils.Interface(_abi) as CompoundStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CompoundStrategy {
    return new Contract(address, _abi, signerOrProvider) as CompoundStrategy;
  }
}
