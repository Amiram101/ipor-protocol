/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Warren, WarrenInterface } from "../Warren";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "appointedOwner",
        type: "address",
      },
    ],
    name: "AppointedToTransferOwnership",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAsset",
        type: "address",
      },
    ],
    name: "IporIndexAddAsset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
    ],
    name: "IporIndexAddUpdater",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAsset",
        type: "address",
      },
    ],
    name: "IporIndexRemoveAsset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updater",
        type: "address",
      },
    ],
    name: "IporIndexRemoveUpdater",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "indexValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quasiIbtPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "exponentialMovingAverage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newExponentialWeightedMovingVariance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
    ],
    name: "IporIndexUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "addAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "updater",
        type: "address",
      },
    ],
    name: "addUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "calculateTimestamp",
        type: "uint256",
      },
    ],
    name: "calculateAccruedIbtPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmTransferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "calculateTimestamp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getAccruedIndex",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "indexValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ibtPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exponentialMovingAverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "exponentialWeightedMovingVariance",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.AccruedIpor",
        name: "accruedIpor",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "indexValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ibtPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exponentialMovingAverage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exponentialWeightedMovingVariance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "updater",
        type: "address",
      },
    ],
    name: "isUpdater",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "removeAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "updater",
        type: "address",
      },
    ],
    name: "removeUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "appointedOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "indexValue",
        type: "uint256",
      },
    ],
    name: "updateIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "indexValues",
        type: "uint256[]",
      },
    ],
    name: "updateIndexes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161251961004c6000396000818161071b0152818161075b01528181610a5c01528181610a9c0152610b2f01526125196000f3fe6080604052600436106101355760003560e01c80635491ab6f116100ab5780638456cb591161006f5780638456cb59146103595780638da5cb5b1461036e578063b31610db14610396578063cc29516a146103de578063f2fde38b146103f3578063f8d1cacd1461041357600080fd5b80635491ab6f146102925780635c975abb146102e557806360946b421461030f578063715018a61461032f5780638129fc1c1461034457600080fd5b80633f4ba83a116100fd5780633f4ba83a146101df57806343d24a5e146101f45780634a5e42b1146102145780634f1ef286146102345780634fdfb0861461024757806352d1902d1461027d57600080fd5b806304b07a5e1461013a5780630d8e6e2c1461015c5780630e5c71291461017f578063298410e51461019f5780633659cfe6146101bf575b600080fd5b34801561014657600080fd5b5061015a610155366004611f62565b610433565b005b34801561016857600080fd5b5060015b6040519081526020015b60405180910390f35b34801561018b57600080fd5b5061016c61019a366004611f7d565b6104e3565b3480156101ab57600080fd5b5061015a6101ba366004611f62565b6104f6565b3480156101cb57600080fd5b5061015a6101da366004611f62565b610710565b3480156101eb57600080fd5b5061015a6107f0565b34801561020057600080fd5b5061015a61020f366004611f62565b610824565b34801561022057600080fd5b5061015a61022f366004611f62565b6108c5565b61015a610242366004611fee565b610a51565b34801561025357600080fd5b5061016c610262366004611f62565b6001600160a01b0316600090815260fb602052604090205490565b34801561028957600080fd5b5061016c610b22565b34801561029e57600080fd5b506102b26102ad366004612094565b610bd5565b60405161017691908151815260208083015190820152604080830151908201526060918201519181019190915260800190565b3480156102f157600080fd5b5060c954600160a01b900460ff166040519015158152602001610176565b34801561031b57600080fd5b5061015a61032a366004611f7d565b610d30565b34801561033b57600080fd5b5061015a610e56565b34801561035057600080fd5b5061015a610e8a565b34801561036557600080fd5b5061015a610f4a565b34801561037a57600080fd5b506097546040516001600160a01b039091168152602001610176565b3480156103a257600080fd5b506103b66103b1366004611f62565b610f7c565b604080519586526020860194909452928401919091526060830152608082015260a001610176565b3480156103ea57600080fd5b5061015a6110b7565b3480156103ff57600080fd5b5061015a61040e366004611f62565b61111a565b34801561041f57600080fd5b5061015a61042e36600461214f565b6111d4565b6097546001600160a01b031633146104665760405162461bcd60e51b815260040161045d9061220f565b60405180910390fd5b60c954600160a01b900460ff16156104905760405162461bcd60e51b815260040161045d90612244565b6001600160a01b038116600081815260fb602090815260408083209290925590519182527face0c1dfbe0f5fb980b099aa633e6dee1baae9627ac4cedc0d38e7b8eb8592ac91015b60405180910390a150565b60006104ef828461125b565b9392505050565b6097546001600160a01b031633146105205760405162461bcd60e51b815260040161045d9061220f565b60c954600160a01b900460ff161561054a5760405162461bcd60e51b815260040161045d90612244565b60408051808201909152600781526649504f525f333760c81b60208201526001600160a01b03821661058f5760405162461bcd60e51b815260040161045d919061229a565b506105a66301e13380670de0b6b3a76400006122e3565b6001600160a01b038216600090815260fc60209081526040918290206001015482518084019093526007835266092a09ea4be66760cb1b9183019190915290916001600160801b039091161061060f5760405162461bcd60e51b815260040161045d919061229a565b506040805160a081018252600080825260208201529081016106456106406301e13380670de0b6b3a76400006122e3565b6112eb565b6001600160801b0390811682526000602080840182905260409384018290526001600160a01b03861680835260fc82529184902085518154878401518616640100000000026001600160a01b031990911663ffffffff909216919091171781558585015160608701518516600160801b0290851617600182015560809095015160029095018054959093166001600160801b03199095169490941790915590519081527fcb80097dccaf3e538880782de147f3af837b0c53fbccc140fd941c9a4ce751dc91016104d8565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156107595760405162461bcd60e51b815260040161045d90612302565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107a260008051602061249d833981519152546001600160a01b031690565b6001600160a01b0316146107c85760405162461bcd60e51b815260040161045d9061234e565b6107d181611358565b604080516000808252602082019092526107ed91839190611382565b50565b6097546001600160a01b0316331461081a5760405162461bcd60e51b815260040161045d9061220f565b610822611501565b565b6097546001600160a01b0316331461084e5760405162461bcd60e51b815260040161045d9061220f565b60c954600160a01b900460ff16156108785760405162461bcd60e51b815260040161045d90612244565b6001600160a01b038116600081815260fb60209081526040918290206001905590519182527f50508517ce3dc4098e3968b25c425dccf3d35fe36cfd753815429610c91d7c9e91016104d8565b6097546001600160a01b031633146108ef5760405162461bcd60e51b815260040161045d9061220f565b60c954600160a01b900460ff16156109195760405162461bcd60e51b815260040161045d90612244565b60408051808201909152600781526649504f525f333760c81b60208201526001600160a01b03821661095e5760405162461bcd60e51b815260040161045d919061229a565b506109756301e13380670de0b6b3a76400006122e3565b6001600160a01b038216600090815260fc6020908152604091829020600101548251808401909352600783526649504f525f333960c81b9183019190915290916001600160801b0390911610156109df5760405162461bcd60e51b815260040161045d919061229a565b506001600160a01b038116600081815260fc6020908152604080832080546001600160a01b03191681556001810193909355600290920180546001600160801b031916905590519182527f11525b9d4febf0b85675ba77e15f3ca60160ead25d1540127fddaa62c5cd236391016104d8565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610a9a5760405162461bcd60e51b815260040161045d90612302565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610ae360008051602061249d833981519152546001600160a01b031690565b6001600160a01b031614610b095760405162461bcd60e51b815260040161045d9061234e565b610b1282611358565b610b1e82826001611382565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610bc25760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161045d565b5060008051602061249d83398151915290565b610c006040518060800160405280600081526020016000815260200160008152602001600081525090565b6001600160a01b038216600090815260fc6020908152604091829020825160a081018452815463ffffffff811682526001600160801b03640100000000909104811693820193909352600182015480841694820194909452600160801b9093048216606084015260020154166080820152610c876301e13380670de0b6b3a76400006122e3565b81604001516001600160801b031610156040518060400160405280600781526020016649504f525f333960c81b81525090610cd55760405162461bcd60e51b815260040161045d919061229a565b50604051806080016040528082602001516001600160801b03168152602001610cfe868661125b565b815260200182606001516001600160801b0316815260200182608001516001600160801b031681525091505092915050565b33600090815260fb6020908152604091829020548251808401909352600683526524a827a92f9960d11b91830191909152600114610d815760405162461bcd60e51b815260040161045d919061229a565b5060c954600160a01b900460ff1615610dac5760405162461bcd60e51b815260040161045d90612244565b604080516001808252818301909252600091602080830190803683370190505090508181600081518110610de257610de261239a565b60209081029190910101526040805160018082528183019092526000918160200160208202803683370190505090508381600081518110610e2557610e2561239a565b60200260200101906001600160a01b031690816001600160a01b031681525050610e5081834261159e565b50505050565b6097546001600160a01b03163314610e805760405162461bcd60e51b815260040161045d9061220f565b610822600061168e565b600054610100900460ff16610ea55760005460ff1615610ea9565b303b155b610f0c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161045d565b600054610100900460ff16158015610f2e576000805461ffff19166101011790555b610f366116e0565b80156107ed576000805461ff001916905550565b6097546001600160a01b03163314610f745760405162461bcd60e51b815260040161045d9061220f565b61082261170f565b6001600160a01b038116600090815260fc60209081526040808320815160a081018352815463ffffffff811682526001600160801b03640100000000909104811694820194909452600182015480851693820193909352600160801b90920483166060830152600201549091166080820152819081908190819061100c6301e13380670de0b6b3a76400006122e3565b81604001516001600160801b031610156040518060400160405280600781526020016649504f525f333960c81b8152509061105a5760405162461bcd60e51b815260040161045d919061229a565b5080602001516001600160801b031695508561108782604001516001600160801b03166301e13380611774565b606083015160808401519351929a9199506001600160801b039081169850909216955063ffffffff169350915050565b60c95460408051808201909152600681526524a827a92f9b60d11b6020820152906001600160a01b031633146111005760405162461bcd60e51b815260040161045d919061229a565b5060c980546001600160a01b03191690556108223361168e565b6097546001600160a01b031633146111445760405162461bcd60e51b815260040161045d9061220f565b60408051808201909152600781526649504f525f333760c81b60208201526001600160a01b0382166111895760405162461bcd60e51b815260040161045d919061229a565b5060c980546001600160a01b0319166001600160a01b0383169081179091556040517f3ec7bb1d452f3c36260fa8ef678a597fd97574d8ec42f6dc98ffce3dbc91228f90600090a250565b33600090815260fb6020908152604091829020548251808401909352600683526524a827a92f9960d11b918301919091526001146112255760405162461bcd60e51b815260040161045d919061229a565b5060c954600160a01b900460ff16156112505760405162461bcd60e51b815260040161045d90612244565b610b1e82824261159e565b6001600160a01b038116600090815260fc60209081526040808320815160a081018352815463ffffffff80821683526001600160801b03640100000000909204821695830195909552600183015480821694830194909452600160801b9093048316606082015260029091015490911660808201526104ef916112e19190869061179616565b6301e13380611774565b60006001600160801b038211156113545760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b606482015260840161045d565b5090565b6097546001600160a01b031633146107ed5760405162461bcd60e51b815260040161045d9061220f565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156113ba576113b5836117c8565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156113f357600080fd5b505afa925050508015611423575060408051601f3d908101601f19168201909252611420918101906123b0565b60015b6114865760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161045d565b60008051602061249d83398151915281146114f55760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161045d565b506113b5838383611864565b60c954600160a01b900460ff166115515760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161045d565b60c9805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b33600090815260fb6020908152604091829020548251808401909352600683526524a827a92f9960d11b918301919091526001146115ef5760405162461bcd60e51b815260040161045d919061229a565b50815183511460405180604001604052806007815260200166092a09ea4be62760cb1b815250906116335760405162461bcd60e51b815260040161045d919061229a565b5060005b83518114610e505761167c8482815181106116545761165461239a565b602002602001015184838151811061166e5761166e61239a565b602002602001015184611889565b80611686816123c9565b915050611637565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166117075760405162461bcd60e51b815260040161045d906123e4565b610822611b49565b60c954600160a01b900460ff16156117395760405162461bcd60e51b815260040161045d90612244565b60c9805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115813390565b60008161178260028261242f565b61178c9085612451565b6104ef919061242f565b60006104ef83602001516001600160801b031684604001516001600160801b0316856000015163ffffffff1685611b79565b6001600160a01b0381163b6118355760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161045d565b60008051602061249d83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61186d83611be5565b60008251118061187a5750805b156113b557610e508383611c25565b6001600160a01b038316600090815260fc6020908152604091829020825160a081018452815463ffffffff811682526001600160801b03640100000000909104811693820193909352600182015480841694820194909452600160801b90930482166060840152600201541660808201526119106301e13380670de0b6b3a76400006122e3565b81604001516001600160801b031610156040518060400160405280600781526020016649504f525f333960c81b8152509061195e5760405162461bcd60e51b815260040161045d919061229a565b50600080600083602001516001600160801b03166000141561199a576119906301e13380670de0b6b3a76400006122e3565b92508591506119ec565b6119a48486611796565b92506119c684606001516001600160801b0316876706f05b59d3b20000611d10565b91506119e984608001516001600160801b031683886706f05b59d3b20000611d5b565b90505b6040518060a00160405280611a0087611ea8565b63ffffffff168152602001611a14886112eb565b6001600160801b03168152602001611a2b856112eb565b6001600160801b03168152602001611a42846112eb565b6001600160801b03168152602001611a59836112eb565b6001600160801b039081169091526001600160a01b038916600081815260fc602090815260409182902085518154878401518716640100000000026001600160a01b031990911663ffffffff90921691909117178155858301516060808801518716600160801b0291871691909117600183015560809687015160029092018054929096166001600160801b031990921691909117909455815192835282018a9052810186905290810184905290810182905260a081018690527f91357060dd7ce921ac472b510c89c6a913d3f5ee44d74d7e3d5bdee132a6e81d9060c00160405180910390a150505050505050565b600054610100900460ff16611b705760405162461bcd60e51b815260040161045d906123e4565b6108223361168e565b6000828210156040518060400160405280600781526020016649504f525f323760c81b81525090611bbd5760405162461bcd60e51b815260040161045d919061229a565b50611bc88383612469565b611bd290866122e3565b611bdc9085612451565b95945050505050565b611bee816117c8565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b611c8d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161045d565b600080846001600160a01b031684604051611ca89190612480565b600060405180830381855af49150503d8060008114611ce3576040519150601f19603f3d011682016040523d82523d6000602084013e611ce8565b606091505b5091509150611bdc82826040518060600160405280602781526020016124bd60279139611f0d565b6000611d53611d1f83856122e3565b611d3184670de0b6b3a7640000612469565b611d3b90876122e3565b611d459190612451565b670de0b6b3a7640000611774565b949350505050565b6000670de0b6b3a76400008211156040518060400160405280600781526020016649504f525f353560c81b81525090611da75760405162461bcd60e51b815260040161045d919061229a565b5083831115611e3e57611e37611dbd8585612469565b611dc78686612469565b611dd985670de0b6b3a7640000612469565b611de391906122e3565b611ded91906122e3565b611e066ec097ce7bc90715b34b9f1000000000886122e3565b611e109190612451565b611e1a90846122e3565b760a70c3c40a64e6c51999090b65f67d9240000000000000611774565b9050611e58565b611e55611e4b8486612469565b611dc78587612469565b90505b604080518082019091526007815266125413d497cd4d60ca1b6020820152670de0b6b3a7640000821115611e9f5760405162461bcd60e51b815260040161045d919061229a565b50949350505050565b600063ffffffff8211156113545760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b606482015260840161045d565b60608315611f1c5750816104ef565b825115611f2c5782518084602001fd5b8160405162461bcd60e51b815260040161045d919061229a565b80356001600160a01b0381168114611f5d57600080fd5b919050565b600060208284031215611f7457600080fd5b6104ef82611f46565b60008060408385031215611f9057600080fd5b611f9983611f46565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611fe657611fe6611fa7565b604052919050565b6000806040838503121561200157600080fd5b61200a83611f46565b915060208084013567ffffffffffffffff8082111561202857600080fd5b818601915086601f83011261203c57600080fd5b81358181111561204e5761204e611fa7565b612060601f8201601f19168501611fbd565b9150808252878482850101111561207657600080fd5b80848401858401376000848284010152508093505050509250929050565b600080604083850312156120a757600080fd5b823591506120b760208401611f46565b90509250929050565b600067ffffffffffffffff8211156120da576120da611fa7565b5060051b60200190565b600082601f8301126120f557600080fd5b8135602061210a612105836120c0565b611fbd565b82815260059290921b8401810191818101908684111561212957600080fd5b8286015b84811015612144578035835291830191830161212d565b509695505050505050565b6000806040838503121561216257600080fd5b823567ffffffffffffffff8082111561217a57600080fd5b818501915085601f83011261218e57600080fd5b8135602061219e612105836120c0565b82815260059290921b840181019181810190898411156121bd57600080fd5b948201945b838610156121e2576121d386611f46565b825294820194908201906121c2565b965050860135925050808211156121f857600080fd5b50612205858286016120e4565b9150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60005b83811015612289578181015183820152602001612271565b83811115610e505750506000910152565b60208152600082518060208401526122b981604085016020870161226e565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156122fd576122fd6122cd565b500290565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156123c257600080fd5b5051919050565b60006000198214156123dd576123dd6122cd565b5060010190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008261244c57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612464576124646122cd565b500190565b60008282101561247b5761247b6122cd565b500390565b6000825161249281846020870161226e565b919091019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220f2082fae15ec410eb7e38f8d766547f20eb6a9693dfd741ab05d5a957b6484b064736f6c63430008090033";

type WarrenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WarrenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Warren__factory extends ContractFactory {
  constructor(...args: WarrenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Warren";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Warren> {
    return super.deploy(overrides || {}) as Promise<Warren>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Warren {
    return super.attach(address) as Warren;
  }
  connect(signer: Signer): Warren__factory {
    return super.connect(signer) as Warren__factory;
  }
  static readonly contractName: "Warren";
  public readonly contractName: "Warren";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WarrenInterface {
    return new utils.Interface(_abi) as WarrenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Warren {
    return new Contract(address, _abi, signerOrProvider) as Warren;
  }
}
